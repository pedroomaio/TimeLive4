'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.296
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.296.
'
Namespace Services.TimeLive.TimeEntries
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="TimeEntriesSoap", [Namespace]:="http://tempuri.org/"),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(Object()))>  _
    Partial Public Class TimeEntries
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private securedWebServiceHeaderValueField As SecuredWebServiceHeader
        
        Private AddTimeEntryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAllTimeEntriesByDateRangeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTimeEntriesByEmployeeIdAndDateRangeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTimesheetApprovalTypeIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertTimeEntryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.TimeLive.Integration.Quickbooks.My.MySettings.Default.TimeLive_Integration_Quickbooks_Services_TimeLive_TimeEntries_TimeEntries
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Property SecuredWebServiceHeaderValue() As SecuredWebServiceHeader
            Get
                Return Me.securedWebServiceHeaderValueField
            End Get
            Set
                Me.securedWebServiceHeaderValueField = value
            End Set
        End Property
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event AddTimeEntryCompleted As AddTimeEntryCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAllTimeEntriesByDateRangeCompleted As GetAllTimeEntriesByDateRangeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTimeEntriesByEmployeeIdAndDateRangeCompleted As GetTimeEntriesByEmployeeIdAndDateRangeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTimesheetApprovalTypeIdCompleted As GetTimesheetApprovalTypeIdCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertTimeEntryCompleted As InsertTimeEntryCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecuredWebServiceHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddTimeEntry", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddTimeEntry(ByVal objTimeEntry As TimeEntry) As String
            Dim results() As Object = Me.Invoke("AddTimeEntry", New Object() {objTimeEntry})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddTimeEntryAsync(ByVal objTimeEntry As TimeEntry)
            Me.AddTimeEntryAsync(objTimeEntry, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddTimeEntryAsync(ByVal objTimeEntry As TimeEntry, ByVal userState As Object)
            If (Me.AddTimeEntryOperationCompleted Is Nothing) Then
                Me.AddTimeEntryOperationCompleted = AddressOf Me.OnAddTimeEntryOperationCompleted
            End If
            Me.InvokeAsync("AddTimeEntry", New Object() {objTimeEntry}, Me.AddTimeEntryOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddTimeEntryOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddTimeEntryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddTimeEntryCompleted(Me, New AddTimeEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecuredWebServiceHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllTimeEntriesByDateRange", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAllTimeEntriesByDateRange(ByVal StartDate As Date, ByVal EndDate As Date) As Object()
            Dim results() As Object = Me.Invoke("GetAllTimeEntriesByDateRange", New Object() {StartDate, EndDate})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAllTimeEntriesByDateRangeAsync(ByVal StartDate As Date, ByVal EndDate As Date)
            Me.GetAllTimeEntriesByDateRangeAsync(StartDate, EndDate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAllTimeEntriesByDateRangeAsync(ByVal StartDate As Date, ByVal EndDate As Date, ByVal userState As Object)
            If (Me.GetAllTimeEntriesByDateRangeOperationCompleted Is Nothing) Then
                Me.GetAllTimeEntriesByDateRangeOperationCompleted = AddressOf Me.OnGetAllTimeEntriesByDateRangeOperationCompleted
            End If
            Me.InvokeAsync("GetAllTimeEntriesByDateRange", New Object() {StartDate, EndDate}, Me.GetAllTimeEntriesByDateRangeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAllTimeEntriesByDateRangeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAllTimeEntriesByDateRangeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAllTimeEntriesByDateRangeCompleted(Me, New GetAllTimeEntriesByDateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecuredWebServiceHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTimeEntriesByEmployeeIdAndDateRange", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTimeEntriesByEmployeeIdAndDateRange(ByVal AccountEmployeeId As Integer, ByVal StartDate As Date, ByVal EndDate As Date) As Object()
            Dim results() As Object = Me.Invoke("GetTimeEntriesByEmployeeIdAndDateRange", New Object() {AccountEmployeeId, StartDate, EndDate})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTimeEntriesByEmployeeIdAndDateRangeAsync(ByVal AccountEmployeeId As Integer, ByVal StartDate As Date, ByVal EndDate As Date)
            Me.GetTimeEntriesByEmployeeIdAndDateRangeAsync(AccountEmployeeId, StartDate, EndDate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTimeEntriesByEmployeeIdAndDateRangeAsync(ByVal AccountEmployeeId As Integer, ByVal StartDate As Date, ByVal EndDate As Date, ByVal userState As Object)
            If (Me.GetTimeEntriesByEmployeeIdAndDateRangeOperationCompleted Is Nothing) Then
                Me.GetTimeEntriesByEmployeeIdAndDateRangeOperationCompleted = AddressOf Me.OnGetTimeEntriesByEmployeeIdAndDateRangeOperationCompleted
            End If
            Me.InvokeAsync("GetTimeEntriesByEmployeeIdAndDateRange", New Object() {AccountEmployeeId, StartDate, EndDate}, Me.GetTimeEntriesByEmployeeIdAndDateRangeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTimeEntriesByEmployeeIdAndDateRangeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTimeEntriesByEmployeeIdAndDateRangeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTimeEntriesByEmployeeIdAndDateRangeCompleted(Me, New GetTimeEntriesByEmployeeIdAndDateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecuredWebServiceHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTimesheetApprovalTypeId", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTimesheetApprovalTypeId() As Integer
            Dim results() As Object = Me.Invoke("GetTimesheetApprovalTypeId", New Object(-1) {})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTimesheetApprovalTypeIdAsync()
            Me.GetTimesheetApprovalTypeIdAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTimesheetApprovalTypeIdAsync(ByVal userState As Object)
            If (Me.GetTimesheetApprovalTypeIdOperationCompleted Is Nothing) Then
                Me.GetTimesheetApprovalTypeIdOperationCompleted = AddressOf Me.OnGetTimesheetApprovalTypeIdOperationCompleted
            End If
            Me.InvokeAsync("GetTimesheetApprovalTypeId", New Object(-1) {}, Me.GetTimesheetApprovalTypeIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTimesheetApprovalTypeIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTimesheetApprovalTypeIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTimesheetApprovalTypeIdCompleted(Me, New GetTimesheetApprovalTypeIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecuredWebServiceHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertTimeEntry", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub InsertTimeEntry(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal AccountEmployeeId As System.Nullable(Of Integer), ByVal TimeEntryDate As Date, ByVal AccountProjectId As Integer, ByVal AccountProjectTaskId As Integer, ByVal TotalTime As Double, ByVal Description As String, ByVal Submitted As Boolean)
            Me.Invoke("InsertTimeEntry", New Object() {AccountEmployeeId, TimeEntryDate, AccountProjectId, AccountProjectTaskId, TotalTime, Description, Submitted})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertTimeEntryAsync(ByVal AccountEmployeeId As System.Nullable(Of Integer), ByVal TimeEntryDate As Date, ByVal AccountProjectId As Integer, ByVal AccountProjectTaskId As Integer, ByVal TotalTime As Double, ByVal Description As String, ByVal Submitted As Boolean)
            Me.InsertTimeEntryAsync(AccountEmployeeId, TimeEntryDate, AccountProjectId, AccountProjectTaskId, TotalTime, Description, Submitted, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertTimeEntryAsync(ByVal AccountEmployeeId As System.Nullable(Of Integer), ByVal TimeEntryDate As Date, ByVal AccountProjectId As Integer, ByVal AccountProjectTaskId As Integer, ByVal TotalTime As Double, ByVal Description As String, ByVal Submitted As Boolean, ByVal userState As Object)
            If (Me.InsertTimeEntryOperationCompleted Is Nothing) Then
                Me.InsertTimeEntryOperationCompleted = AddressOf Me.OnInsertTimeEntryOperationCompleted
            End If
            Me.InvokeAsync("InsertTimeEntry", New Object() {AccountEmployeeId, TimeEntryDate, AccountProjectId, AccountProjectTaskId, TotalTime, Description, Submitted}, Me.InsertTimeEntryOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertTimeEntryOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertTimeEntryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertTimeEntryCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/"),  _
     System.Xml.Serialization.XmlRootAttribute([Namespace]:="http://tempuri.org/", IsNullable:=false)>  _
    Partial Public Class SecuredWebServiceHeader
        Inherits System.Web.Services.Protocols.SoapHeader
        
        Private usernameField As String
        
        Private passwordField As String
        
        Private authenticatedTokenField As String
        
        Private accountIdField As Integer
        
        Private anyAttrField() As System.Xml.XmlAttribute
        
        '''<remarks/>
        Public Property Username() As String
            Get
                Return Me.usernameField
            End Get
            Set
                Me.usernameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Password() As String
            Get
                Return Me.passwordField
            End Get
            Set
                Me.passwordField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AuthenticatedToken() As String
            Get
                Return Me.authenticatedTokenField
            End Get
            Set
                Me.authenticatedTokenField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AccountId() As Integer
            Get
                Return Me.accountIdField
            End Get
            Set
                Me.accountIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAnyAttributeAttribute()>  _
        Public Property AnyAttr() As System.Xml.XmlAttribute()
            Get
                Return Me.anyAttrField
            End Get
            Set
                Me.anyAttrField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class TimeEntry
        
        Private employeeNameField As String
        
        Private clientNameField As String
        
        Private projectNameField As String
        
        Private taskNameField As String
        
        Private totalTimeField As Date
        
        Private isBillableField As Boolean
        
        Private timeEntryDateField As Date
        
        Private milestoneField As String
        
        Private employeeDepartmentField As String
        
        Private employeeTypeField As String
        
        Private workTypeField As String
        
        Private costCenterField As String
        
        Private taskWithParentField As String
        
        '''<remarks/>
        Public Property EmployeeName() As String
            Get
                Return Me.employeeNameField
            End Get
            Set
                Me.employeeNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ClientName() As String
            Get
                Return Me.clientNameField
            End Get
            Set
                Me.clientNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProjectName() As String
            Get
                Return Me.projectNameField
            End Get
            Set
                Me.projectNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TaskName() As String
            Get
                Return Me.taskNameField
            End Get
            Set
                Me.taskNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TotalTime() As Date
            Get
                Return Me.totalTimeField
            End Get
            Set
                Me.totalTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsBillable() As Boolean
            Get
                Return Me.isBillableField
            End Get
            Set
                Me.isBillableField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TimeEntryDate() As Date
            Get
                Return Me.timeEntryDateField
            End Get
            Set
                Me.timeEntryDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Milestone() As String
            Get
                Return Me.milestoneField
            End Get
            Set
                Me.milestoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeDepartment() As String
            Get
                Return Me.employeeDepartmentField
            End Get
            Set
                Me.employeeDepartmentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeType() As String
            Get
                Return Me.employeeTypeField
            End Get
            Set
                Me.employeeTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property WorkType() As String
            Get
                Return Me.workTypeField
            End Get
            Set
                Me.workTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CostCenter() As String
            Get
                Return Me.costCenterField
            End Get
            Set
                Me.costCenterField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TaskWithParent() As String
            Get
                Return Me.taskWithParentField
            End Get
            Set
                Me.taskWithParentField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub AddTimeEntryCompletedEventHandler(ByVal sender As Object, ByVal e As AddTimeEntryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddTimeEntryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetAllTimeEntriesByDateRangeCompletedEventHandler(ByVal sender As Object, ByVal e As GetAllTimeEntriesByDateRangeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAllTimeEntriesByDateRangeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetTimeEntriesByEmployeeIdAndDateRangeCompletedEventHandler(ByVal sender As Object, ByVal e As GetTimeEntriesByEmployeeIdAndDateRangeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTimeEntriesByEmployeeIdAndDateRangeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetTimesheetApprovalTypeIdCompletedEventHandler(ByVal sender As Object, ByVal e As GetTimesheetApprovalTypeIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTimesheetApprovalTypeIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub InsertTimeEntryCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
End Namespace
