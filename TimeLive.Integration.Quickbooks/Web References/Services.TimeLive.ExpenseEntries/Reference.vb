'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.296
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.296.
'
Namespace Services.TimeLive.ExpenseEntries
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="ExpenseEntriesSoap", [Namespace]:="http://tempuri.org/"),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(Object()))>  _
    Partial Public Class ExpenseEntries
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private securedWebServiceHeaderValueField As SecuredWebServiceHeader
        
        Private AddExpenseEntryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAllExpenseEntriesByDateRangeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetExpenseEntriesByEmployeeIdAndDateRangeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddExpenseNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetExpenseNamesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetExpenseApprovalTypeIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.TimeLive.Integration.Quickbooks.My.MySettings.Default.TimeLive_Integration_Quickbooks_Services_TimeLive_ExpenseEntries_ExpenseEntries
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Property SecuredWebServiceHeaderValue() As SecuredWebServiceHeader
            Get
                Return Me.securedWebServiceHeaderValueField
            End Get
            Set
                Me.securedWebServiceHeaderValueField = value
            End Set
        End Property
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event AddExpenseEntryCompleted As AddExpenseEntryCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAllExpenseEntriesByDateRangeCompleted As GetAllExpenseEntriesByDateRangeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetExpenseEntriesByEmployeeIdAndDateRangeCompleted As GetExpenseEntriesByEmployeeIdAndDateRangeCompletedEventHandler
        
        '''<remarks/>
        Public Event AddExpenseNameCompleted As AddExpenseNameCompletedEventHandler
        
        '''<remarks/>
        Public Event GetExpenseNamesCompleted As GetExpenseNamesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetExpenseApprovalTypeIdCompleted As GetExpenseApprovalTypeIdCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecuredWebServiceHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddExpenseEntry", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddExpenseEntry(ByVal objExpenseEntry As ExpenseEntry) As String
            Dim results() As Object = Me.Invoke("AddExpenseEntry", New Object() {objExpenseEntry})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddExpenseEntryAsync(ByVal objExpenseEntry As ExpenseEntry)
            Me.AddExpenseEntryAsync(objExpenseEntry, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddExpenseEntryAsync(ByVal objExpenseEntry As ExpenseEntry, ByVal userState As Object)
            If (Me.AddExpenseEntryOperationCompleted Is Nothing) Then
                Me.AddExpenseEntryOperationCompleted = AddressOf Me.OnAddExpenseEntryOperationCompleted
            End If
            Me.InvokeAsync("AddExpenseEntry", New Object() {objExpenseEntry}, Me.AddExpenseEntryOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddExpenseEntryOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddExpenseEntryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddExpenseEntryCompleted(Me, New AddExpenseEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecuredWebServiceHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllExpenseEntriesByDateRange", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAllExpenseEntriesByDateRange(ByVal StartDate As Date, ByVal EndDate As Date) As Object()
            Dim results() As Object = Me.Invoke("GetAllExpenseEntriesByDateRange", New Object() {StartDate, EndDate})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAllExpenseEntriesByDateRangeAsync(ByVal StartDate As Date, ByVal EndDate As Date)
            Me.GetAllExpenseEntriesByDateRangeAsync(StartDate, EndDate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAllExpenseEntriesByDateRangeAsync(ByVal StartDate As Date, ByVal EndDate As Date, ByVal userState As Object)
            If (Me.GetAllExpenseEntriesByDateRangeOperationCompleted Is Nothing) Then
                Me.GetAllExpenseEntriesByDateRangeOperationCompleted = AddressOf Me.OnGetAllExpenseEntriesByDateRangeOperationCompleted
            End If
            Me.InvokeAsync("GetAllExpenseEntriesByDateRange", New Object() {StartDate, EndDate}, Me.GetAllExpenseEntriesByDateRangeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAllExpenseEntriesByDateRangeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAllExpenseEntriesByDateRangeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAllExpenseEntriesByDateRangeCompleted(Me, New GetAllExpenseEntriesByDateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecuredWebServiceHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetExpenseEntriesByEmployeeIdAndDateRange", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetExpenseEntriesByEmployeeIdAndDateRange(ByVal AccountEmployeeId As Integer, ByVal StartDate As Date, ByVal EndDate As Date) As Object()
            Dim results() As Object = Me.Invoke("GetExpenseEntriesByEmployeeIdAndDateRange", New Object() {AccountEmployeeId, StartDate, EndDate})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetExpenseEntriesByEmployeeIdAndDateRangeAsync(ByVal AccountEmployeeId As Integer, ByVal StartDate As Date, ByVal EndDate As Date)
            Me.GetExpenseEntriesByEmployeeIdAndDateRangeAsync(AccountEmployeeId, StartDate, EndDate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetExpenseEntriesByEmployeeIdAndDateRangeAsync(ByVal AccountEmployeeId As Integer, ByVal StartDate As Date, ByVal EndDate As Date, ByVal userState As Object)
            If (Me.GetExpenseEntriesByEmployeeIdAndDateRangeOperationCompleted Is Nothing) Then
                Me.GetExpenseEntriesByEmployeeIdAndDateRangeOperationCompleted = AddressOf Me.OnGetExpenseEntriesByEmployeeIdAndDateRangeOperationCompleted
            End If
            Me.InvokeAsync("GetExpenseEntriesByEmployeeIdAndDateRange", New Object() {AccountEmployeeId, StartDate, EndDate}, Me.GetExpenseEntriesByEmployeeIdAndDateRangeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetExpenseEntriesByEmployeeIdAndDateRangeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetExpenseEntriesByEmployeeIdAndDateRangeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetExpenseEntriesByEmployeeIdAndDateRangeCompleted(Me, New GetExpenseEntriesByEmployeeIdAndDateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecuredWebServiceHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddExpenseName", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddExpenseName(ByVal objExpenseName As ExpenseName) As String
            Dim results() As Object = Me.Invoke("AddExpenseName", New Object() {objExpenseName})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddExpenseNameAsync(ByVal objExpenseName As ExpenseName)
            Me.AddExpenseNameAsync(objExpenseName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddExpenseNameAsync(ByVal objExpenseName As ExpenseName, ByVal userState As Object)
            If (Me.AddExpenseNameOperationCompleted Is Nothing) Then
                Me.AddExpenseNameOperationCompleted = AddressOf Me.OnAddExpenseNameOperationCompleted
            End If
            Me.InvokeAsync("AddExpenseName", New Object() {objExpenseName}, Me.AddExpenseNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddExpenseNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddExpenseNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddExpenseNameCompleted(Me, New AddExpenseNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecuredWebServiceHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetExpenseNames", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetExpenseNames() As Object()
            Dim results() As Object = Me.Invoke("GetExpenseNames", New Object(-1) {})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetExpenseNamesAsync()
            Me.GetExpenseNamesAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetExpenseNamesAsync(ByVal userState As Object)
            If (Me.GetExpenseNamesOperationCompleted Is Nothing) Then
                Me.GetExpenseNamesOperationCompleted = AddressOf Me.OnGetExpenseNamesOperationCompleted
            End If
            Me.InvokeAsync("GetExpenseNames", New Object(-1) {}, Me.GetExpenseNamesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetExpenseNamesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetExpenseNamesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetExpenseNamesCompleted(Me, New GetExpenseNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecuredWebServiceHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetExpenseApprovalTypeId", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetExpenseApprovalTypeId() As Integer
            Dim results() As Object = Me.Invoke("GetExpenseApprovalTypeId", New Object(-1) {})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetExpenseApprovalTypeIdAsync()
            Me.GetExpenseApprovalTypeIdAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetExpenseApprovalTypeIdAsync(ByVal userState As Object)
            If (Me.GetExpenseApprovalTypeIdOperationCompleted Is Nothing) Then
                Me.GetExpenseApprovalTypeIdOperationCompleted = AddressOf Me.OnGetExpenseApprovalTypeIdOperationCompleted
            End If
            Me.InvokeAsync("GetExpenseApprovalTypeId", New Object(-1) {}, Me.GetExpenseApprovalTypeIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetExpenseApprovalTypeIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetExpenseApprovalTypeIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetExpenseApprovalTypeIdCompleted(Me, New GetExpenseApprovalTypeIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/"),  _
     System.Xml.Serialization.XmlRootAttribute([Namespace]:="http://tempuri.org/", IsNullable:=false)>  _
    Partial Public Class SecuredWebServiceHeader
        Inherits System.Web.Services.Protocols.SoapHeader
        
        Private usernameField As String
        
        Private passwordField As String
        
        Private authenticatedTokenField As String
        
        Private accountIdField As Integer
        
        Private anyAttrField() As System.Xml.XmlAttribute
        
        '''<remarks/>
        Public Property Username() As String
            Get
                Return Me.usernameField
            End Get
            Set
                Me.usernameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Password() As String
            Get
                Return Me.passwordField
            End Get
            Set
                Me.passwordField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AuthenticatedToken() As String
            Get
                Return Me.authenticatedTokenField
            End Get
            Set
                Me.authenticatedTokenField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AccountId() As Integer
            Get
                Return Me.accountIdField
            End Get
            Set
                Me.accountIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAnyAttributeAttribute()>  _
        Public Property AnyAttr() As System.Xml.XmlAttribute()
            Get
                Return Me.anyAttrField
            End Get
            Set
                Me.anyAttrField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class ExpenseName
        
        Private expenseName1Field As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute("ExpenseName")>  _
        Public Property ExpenseName1() As String
            Get
                Return Me.expenseName1Field
            End Get
            Set
                Me.expenseName1Field = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class ExpenseEntry
        
        Private employeeNameField As String
        
        Private clientWithProjectField As String
        
        Private expenseEntryDateField As Date
        
        Private amountField As Double
        
        Private expenseNameField As String
        
        Private expenseTypeField As String
        
        '''<remarks/>
        Public Property EmployeeName() As String
            Get
                Return Me.employeeNameField
            End Get
            Set
                Me.employeeNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ClientWithProject() As String
            Get
                Return Me.clientWithProjectField
            End Get
            Set
                Me.clientWithProjectField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ExpenseEntryDate() As Date
            Get
                Return Me.expenseEntryDateField
            End Get
            Set
                Me.expenseEntryDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Amount() As Double
            Get
                Return Me.amountField
            End Get
            Set
                Me.amountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ExpenseName() As String
            Get
                Return Me.expenseNameField
            End Get
            Set
                Me.expenseNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ExpenseType() As String
            Get
                Return Me.expenseTypeField
            End Get
            Set
                Me.expenseTypeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub AddExpenseEntryCompletedEventHandler(ByVal sender As Object, ByVal e As AddExpenseEntryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddExpenseEntryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetAllExpenseEntriesByDateRangeCompletedEventHandler(ByVal sender As Object, ByVal e As GetAllExpenseEntriesByDateRangeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAllExpenseEntriesByDateRangeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetExpenseEntriesByEmployeeIdAndDateRangeCompletedEventHandler(ByVal sender As Object, ByVal e As GetExpenseEntriesByEmployeeIdAndDateRangeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetExpenseEntriesByEmployeeIdAndDateRangeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub AddExpenseNameCompletedEventHandler(ByVal sender As Object, ByVal e As AddExpenseNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddExpenseNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetExpenseNamesCompletedEventHandler(ByVal sender As Object, ByVal e As GetExpenseNamesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetExpenseNamesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetExpenseApprovalTypeIdCompletedEventHandler(ByVal sender As Object, ByVal e As GetExpenseApprovalTypeIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetExpenseApprovalTypeIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
End Namespace
