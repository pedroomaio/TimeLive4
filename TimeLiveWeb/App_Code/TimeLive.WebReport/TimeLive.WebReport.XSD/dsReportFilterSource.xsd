<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="dsReportFilterSource" targetNamespace="http://tempuri.org/dsReportFilterSource.xsd" xmlns:mstns="http://tempuri.org/dsReportFilterSource.xsd" xmlns="http://tempuri.org/dsReportFilterSource.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Web.config" AppSettingsPropertyName="LiveConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="LiveConnectionString (Web.config)" ParameterPrefix="@" PropertyReference="AppConfig.System.Configuration.ConfigurationManager.0.ConnectionStrings.LiveConnectionString.ConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="EmployeeFilterTableAdapter" GeneratorDataComponentClassName="EmployeeFilterTableAdapter" Name="EmployeeFilter" UserDataComponentName="EmployeeFilterTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="TimeLive.dbo.vueAccountEmployee" DbObjectType="View" GenerateMethods="Get" GenerateShortCommands="false" GeneratorGetMethodName="GetDataByAccountId" GetMethodModifier="Public" GetMethodName="GetDataByAccountId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetDataByAccountId" UserSourceName="GetDataByAccountId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     EmployeeNameWithCode, AccountEmployeeId
FROM         vueAccountEmployee
WHERE     (AccountId = @AccountId) AND (IsDisabled &lt;&gt; 1)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="AccountId" ColumnName="AccountId" DataSourceName="TimeLive.dbo.vueAccountEmployee" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="EmployeeNameWithCode" DataSetColumn="EmployeeNameWithCode" />
              <Mapping SourceColumn="AccountEmployeeId" DataSetColumn="AccountEmployeeId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DepartmentFilterTableAdapter" GeneratorDataComponentClassName="DepartmentFilterTableAdapter" Name="DepartmentFilter" UserDataComponentName="DepartmentFilterTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="TimeLive.dbo.AccountDepartment" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByAccountId" GetMethodModifier="Public" GetMethodName="GetDataByAccountId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetDataByAccountId" UserSourceName="GetDataByAccountId">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [AccountDepartment] WHERE (([AccountDepartmentId] = @Original_AccountDepartmentId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AccountDepartmentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountDepartmentId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     AccountDepartmentId, DepartmentCode, DepartmentName
FROM         AccountDepartment
WHERE     (AccountId = @AccountId) And (IsDisabled &lt;&gt; 1)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="AccountId" ColumnName="AccountId" DataSourceName="TimeLive.dbo.AccountDepartment" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [AccountDepartment] SET [DepartmentCode] = @DepartmentCode, [DepartmentName] = @DepartmentName WHERE (([AccountDepartmentId] = @Original_AccountDepartmentId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@DepartmentCode" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="DepartmentCode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@DepartmentName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="DepartmentName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AccountDepartmentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountDepartmentId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="AccountDepartmentId" DataSetColumn="AccountDepartmentId" />
              <Mapping SourceColumn="DepartmentCode" DataSetColumn="DepartmentCode" />
              <Mapping SourceColumn="DepartmentName" DataSetColumn="DepartmentName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ProjectFilterTableAdapter" GeneratorDataComponentClassName="ProjectFilterTableAdapter" Name="ProjectFilter" UserDataComponentName="ProjectFilterTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="TimeLive.dbo.AccountProject" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByAccountId" GetMethodModifier="Public" GetMethodName="GetDataByAccountId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetDataByAccountId" UserSourceName="GetDataByAccountId">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [AccountProject] WHERE (([AccountProjectId] = @Original_AccountProjectId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AccountProjectId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountProjectId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     AccountProjectId, ProjectName, ProjectDescription
FROM         AccountProject
WHERE     (AccountId = @AccountId) AND (IsDisabled &lt;&gt; 1)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="AccountId" ColumnName="AccountId" DataSourceName="TimeLive.dbo.AccountProject" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [AccountProject] SET [ProjectName] = @ProjectName, [ProjectDescription] = @ProjectDescription WHERE (([AccountProjectId] = @Original_AccountProjectId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ProjectName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ProjectName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ProjectDescription" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ProjectDescription" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AccountProjectId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountProjectId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="AccountProjectId" DataSetColumn="AccountProjectId" />
              <Mapping SourceColumn="ProjectName" DataSetColumn="ProjectName" />
              <Mapping SourceColumn="ProjectDescription" DataSetColumn="ProjectDescription" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="LocationFilterTableAdapter" GeneratorDataComponentClassName="LocationFilterTableAdapter" Name="LocationFilter" UserDataComponentName="LocationFilterTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="TimeLive.dbo.AccountLocation" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByAccountId" GetMethodModifier="Public" GetMethodName="GetDataByAccountId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetDataByAccountId" UserSourceName="GetDataByAccountId">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [AccountLocation] WHERE (([AccountLocationId] = @Original_AccountLocationId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AccountLocationId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountLocationId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     AccountLocationId, AccountLocation
FROM         AccountLocation
WHERE     (AccountId = @AccountId) And (IsDisabled &lt;&gt; 1)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="AccountId" ColumnName="AccountId" DataSourceName="TimeLive.dbo.AccountLocation" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [AccountLocation] SET [AccountLocation] = @AccountLocation WHERE (([AccountLocationId] = @Original_AccountLocationId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@AccountLocation" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="AccountLocation" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AccountLocationId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountLocationId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="AccountLocationId" DataSetColumn="AccountLocationId" />
              <Mapping SourceColumn="AccountLocation" DataSetColumn="AccountLocation" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ClientFilterTableAdapter" GeneratorDataComponentClassName="ClientFilterTableAdapter" Name="ClientFilter" UserDataComponentName="ClientFilterTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="TimeLive.dbo.AccountParty" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByAccountId" GetMethodModifier="Public" GetMethodName="GetDataByAccountId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetDataByAccountId" UserSourceName="GetDataByAccountId">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [AccountParty] WHERE (([AccountPartyId] = @Original_AccountPartyId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AccountPartyId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountPartyId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     AccountPartyId, PartyNick, PartyName
FROM         AccountParty
WHERE     (AccountId = @Accountid) AND (IsDisabled &lt;&gt; 1) AND (IsDeleted &lt;&gt; 1 OR
                      IsDeleted IS NULL)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Accountid" ColumnName="AccountId" DataSourceName="TimeLive.dbo.AccountParty" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Accountid" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [AccountParty] SET [PartyNick] = @PartyNick, [PartyName] = @PartyName WHERE (([AccountPartyId] = @Original_AccountPartyId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@PartyNick" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PartyNick" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@PartyName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PartyName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AccountPartyId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountPartyId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="AccountPartyId" DataSetColumn="AccountPartyId" />
              <Mapping SourceColumn="PartyNick" DataSetColumn="PartyNick" />
              <Mapping SourceColumn="PartyName" DataSetColumn="PartyName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ProjectTaskFilterTableAdapter" GeneratorDataComponentClassName="ProjectTaskFilterTableAdapter" Name="ProjectTaskFilter" UserDataComponentName="ProjectTaskFilterTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="TimeLive.dbo.vueAccountProjectTask" DbObjectType="View" GenerateMethods="Get" GenerateShortCommands="false" GeneratorGetMethodName="GetDataByAccountId" GetMethodModifier="Public" GetMethodName="GetDataByAccountId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetDataByAccountId" UserSourceName="GetDataByAccountId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     AccountProjectTaskId, TaskName, TaskDescription
FROM         vueAccountProjectTask
WHERE     (AccountId = @AccountId) And (IsDisabled &lt;&gt; 1)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="AccountId" ColumnName="AccountId" DataSourceName="TimeLive.dbo.vueAccountProjectTask" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="AccountProjectTaskId" DataSetColumn="AccountProjectTaskId" />
              <Mapping SourceColumn="TaskName" DataSetColumn="TaskName" />
              <Mapping SourceColumn="TaskDescription" DataSetColumn="TaskDescription" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ExpenseTypeFilterTableAdapter" GeneratorDataComponentClassName="ExpenseTypeFilterTableAdapter" Name="ExpenseTypeFilter" UserDataComponentName="ExpenseTypeFilterTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="TimeLive.dbo.AccountExpenseType" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByAccountId" GetMethodModifier="Public" GetMethodName="GetDataByAccountId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetDataByAccountId" UserSourceName="GetDataByAccountId">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [AccountExpenseType] WHERE (([AccountExpenseTypeId] = @Original_AccountExpenseTypeId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AccountExpenseTypeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountExpenseTypeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     AccountExpenseTypeId, ExpenseType
FROM         AccountExpenseType
WHERE     (AccountId = @Accountid) And (IsDisabled &lt;&gt; 1)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Accountid" ColumnName="AccountId" DataSourceName="TimeLive.dbo.AccountExpenseType" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Accountid" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [AccountExpenseType] SET [ExpenseType] = @ExpenseType WHERE (([AccountExpenseTypeId] = @Original_AccountExpenseTypeId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ExpenseType" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ExpenseType" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AccountExpenseTypeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountExpenseTypeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="AccountExpenseTypeId" DataSetColumn="AccountExpenseTypeId" />
              <Mapping SourceColumn="ExpenseType" DataSetColumn="ExpenseType" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ExpenseFilterTableAdapter" GeneratorDataComponentClassName="ExpenseFilterTableAdapter" Name="ExpenseFilter" UserDataComponentName="ExpenseFilterTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="TimeLive.dbo.AccountExpense" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByAccountId" GetMethodModifier="Public" GetMethodName="GetDataByAccountId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetDataByAccountId" UserSourceName="GetDataByAccountId">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [AccountExpense] WHERE (([AccountExpenseId] = @Original_AccountExpenseId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AccountExpenseId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountExpenseId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     AccountExpenseId, AccountExpenseName
FROM         AccountExpense
WHERE     (AccountId = @AccountId) And (IsDisabled &lt;&gt; 1)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="AccountId" ColumnName="AccountId" DataSourceName="TimeLive.dbo.AccountExpense" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [AccountExpense] SET [AccountExpenseName] = @AccountExpenseName WHERE (([AccountExpenseId] = @Original_AccountExpenseId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@AccountExpenseName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="AccountExpenseName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AccountExpenseId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountExpenseId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="AccountExpenseId" DataSetColumn="AccountExpenseId" />
              <Mapping SourceColumn="AccountExpenseName" DataSetColumn="AccountExpenseName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RoleFilterTableAdapter" GeneratorDataComponentClassName="RoleFilterTableAdapter" Name="RoleFilter" UserDataComponentName="RoleFilterTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="TimeLive.dbo.AccountRole" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByAccountId" GetMethodModifier="Public" GetMethodName="GetDataByAccountId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetDataByAccountId" UserSourceName="GetDataByAccountId">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [AccountRole] WHERE (([AccountRoleId] = @Original_AccountRoleId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AccountRoleId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountRoleId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     AccountRoleId, Role
FROM         AccountRole
WHERE     (AccountId = @AccountId) And (IsDisabled &lt;&gt; 1)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="AccountId" ColumnName="AccountId" DataSourceName="TimeLive.dbo.AccountRole" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [AccountRole] SET [Role] = @Role WHERE (([AccountRoleId] = @Original_AccountRoleId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Role" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Role" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AccountRoleId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountRoleId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="AccountRoleId" DataSetColumn="AccountRoleId" />
              <Mapping SourceColumn="Role" DataSetColumn="Role" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StatusFilterTableAdapter" GeneratorDataComponentClassName="StatusFilterTableAdapter" Name="StatusFilter" UserDataComponentName="StatusFilterTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="TimeLive.dbo.AccountStatus" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByAccountId" GetMethodModifier="Public" GetMethodName="GetDataByAccountId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetDataByAccountId" UserSourceName="GetDataByAccountId">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [AccountStatus] WHERE (([AccountStatusId] = @Original_AccountStatusId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AccountStatusId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountStatusId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     AccountStatusId, Status
FROM         AccountStatus
WHERE     (AccountId = @AccountId) AND (StatusTypeId = @StatusTypeId) And (IsDisabled &lt;&gt; 1)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="AccountId" ColumnName="AccountId" DataSourceName="TimeLive.dbo.AccountStatus" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="StatusTypeId" ColumnName="StatusTypeId" DataSourceName="TimeLive.dbo.AccountStatus" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@StatusTypeId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="StatusTypeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [AccountStatus] SET [Status] = @Status WHERE (([AccountStatusId] = @Original_AccountStatusId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Status" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Status" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AccountStatusId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountStatusId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="AccountStatusId" DataSetColumn="AccountStatusId" />
              <Mapping SourceColumn="Status" DataSetColumn="Status" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CurrencyFilterTableAdapter" GeneratorDataComponentClassName="CurrencyFilterTableAdapter" Name="CurrencyFilter" UserDataComponentName="CurrencyFilterTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="TimeLive.dbo.vueAccountCurrency" DbObjectType="View" GenerateMethods="Get" GenerateShortCommands="false" GeneratorGetMethodName="GetDataByAccountId" GetMethodModifier="Public" GetMethodName="GetDataByAccountId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetDataByAccountId" UserSourceName="GetDataByAccountId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     Currency, CurrencyCode, AccountCurrencyId
FROM         vueAccountCurrency
WHERE     (AccountId = @AccountId) AND (Disabled &lt;&gt; 1)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="AccountId" ColumnName="AccountId" DataSourceName="TimeLive.dbo.vueAccountCurrency" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Currency" DataSetColumn="Currency" />
              <Mapping SourceColumn="CurrencyCode" DataSetColumn="CurrencyCode" />
              <Mapping SourceColumn="AccountCurrencyId" DataSetColumn="AccountCurrencyId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TaskTypeFilterTableAdapter" GeneratorDataComponentClassName="TaskTypeFilterTableAdapter" Name="TaskTypeFilter" UserDataComponentName="TaskTypeFilterTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="TimeLive.dbo.AccountTaskType" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByAccountId" GetMethodModifier="Public" GetMethodName="GetDataByAccountId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetDataByAccountId" UserSourceName="GetDataByAccountId">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [AccountTaskType] WHERE (([AccountTaskTypeId] = @Original_AccountTaskTypeId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AccountTaskTypeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountTaskTypeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [AccountTaskType] ([TaskType], [AccountId], [CreatedOn], [CreatedByEmployeeId], [ModifiedOn], [ModifiedByEmployeeId], [MasterAccountTaskTypeId], [IsDisabled]) VALUES (@TaskType, @AccountId, @CreatedOn, @CreatedByEmployeeId, @ModifiedOn, @ModifiedByEmployeeId, @MasterAccountTaskTypeId, @IsDisabled)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@TaskType" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TaskType" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@AccountId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@CreatedOn" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="CreatedOn" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CreatedByEmployeeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CreatedByEmployeeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@ModifiedOn" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="ModifiedOn" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ModifiedByEmployeeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ModifiedByEmployeeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@MasterAccountTaskTypeId" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="MasterAccountTaskTypeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsDisabled" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsDisabled" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     AccountTaskTypeId, TaskType, AccountId, CreatedOn, CreatedByEmployeeId, ModifiedOn, ModifiedByEmployeeId, MasterAccountTaskTypeId, 
                      IsDisabled
FROM         AccountTaskType
WHERE     (AccountId = @AccountId) And (IsDisabled &lt;&gt; 1)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="AccountId" ColumnName="AccountId" DataSourceName="TimeLive.dbo.AccountTaskType" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [AccountTaskType] SET [TaskType] = @TaskType, [AccountId] = @AccountId, [CreatedOn] = @CreatedOn, [CreatedByEmployeeId] = @CreatedByEmployeeId, [ModifiedOn] = @ModifiedOn, [ModifiedByEmployeeId] = @ModifiedByEmployeeId, [MasterAccountTaskTypeId] = @MasterAccountTaskTypeId, [IsDisabled] = @IsDisabled WHERE (([AccountTaskTypeId] = @Original_AccountTaskTypeId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@TaskType" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TaskType" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@AccountId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@CreatedOn" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="CreatedOn" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CreatedByEmployeeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CreatedByEmployeeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@ModifiedOn" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="ModifiedOn" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ModifiedByEmployeeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ModifiedByEmployeeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@MasterAccountTaskTypeId" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="MasterAccountTaskTypeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsDisabled" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsDisabled" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AccountTaskTypeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountTaskTypeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="AccountTaskTypeId" DataSetColumn="AccountTaskTypeId" />
              <Mapping SourceColumn="TaskType" DataSetColumn="TaskType" />
              <Mapping SourceColumn="AccountId" DataSetColumn="AccountId" />
              <Mapping SourceColumn="CreatedOn" DataSetColumn="CreatedOn" />
              <Mapping SourceColumn="CreatedByEmployeeId" DataSetColumn="CreatedByEmployeeId" />
              <Mapping SourceColumn="ModifiedOn" DataSetColumn="ModifiedOn" />
              <Mapping SourceColumn="ModifiedByEmployeeId" DataSetColumn="ModifiedByEmployeeId" />
              <Mapping SourceColumn="MasterAccountTaskTypeId" DataSetColumn="MasterAccountTaskTypeId" />
              <Mapping SourceColumn="IsDisabled" DataSetColumn="IsDisabled" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PriorityFilterTableAdapter" GeneratorDataComponentClassName="PriorityFilterTableAdapter" Name="PriorityFilter" UserDataComponentName="PriorityFilterTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="TimeLive.dbo.AccountPriority" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByAccountId" GetMethodModifier="Public" GetMethodName="GetDataByAccountId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetDataByAccountId" UserSourceName="GetDataByAccountId">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [AccountPriority] WHERE (([AccountPriorityId] = @Original_AccountPriorityId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AccountPriorityId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountPriorityId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [AccountPriority] ([AccountId], [Priority], [PriorityOrder], [IsDisabled]) VALUES (@AccountId, @Priority, @PriorityOrder, @IsDisabled)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@AccountId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Priority" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Priority" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Byte" Direction="Input" ParameterName="@PriorityOrder" Precision="0" ProviderType="TinyInt" Scale="0" Size="0" SourceColumn="PriorityOrder" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsDisabled" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsDisabled" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     AccountPriorityId, AccountId, Priority, PriorityOrder, IsDisabled
FROM         AccountPriority
WHERE     (AccountId = @AccountId) And (IsDisabled &lt;&gt; 1)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="AccountId" ColumnName="AccountId" DataSourceName="TimeLive.dbo.AccountPriority" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [AccountPriority] SET [AccountId] = @AccountId, [Priority] = @Priority, [PriorityOrder] = @PriorityOrder, [IsDisabled] = @IsDisabled WHERE (([AccountPriorityId] = @Original_AccountPriorityId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@AccountId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Priority" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Priority" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Byte" Direction="Input" ParameterName="@PriorityOrder" Precision="0" ProviderType="TinyInt" Scale="0" Size="0" SourceColumn="PriorityOrder" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsDisabled" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsDisabled" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AccountPriorityId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountPriorityId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="AccountPriorityId" DataSetColumn="AccountPriorityId" />
              <Mapping SourceColumn="AccountId" DataSetColumn="AccountId" />
              <Mapping SourceColumn="Priority" DataSetColumn="Priority" />
              <Mapping SourceColumn="PriorityOrder" DataSetColumn="PriorityOrder" />
              <Mapping SourceColumn="IsDisabled" DataSetColumn="IsDisabled" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ApprovedByTimeEntryFilterTableAdapter" GeneratorDataComponentClassName="ApprovedByTimeEntryFilterTableAdapter" Name="ApprovedByTimeEntryFilter" UserDataComponentName="ApprovedByTimeEntryFilterTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="TimeLive.dbo.vueAccountEmployeeTimeEntryApprovalForReport" DbObjectType="View" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT      AccountId
FROM         vueAccountEmployeeTimeEntryApprovalForReport</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="AccountId" DataSetColumn="AccountId" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="TimeLive01MAR14.dbo.vueAccountEmployeeTimeEntryApprovalForReport" DbObjectType="View" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByAccountId" GetMethodModifier="Public" GetMethodName="GetDataByAccountId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByAccountId" UserSourceName="GetDataByAccountId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT DISTINCT 
                      AccountEmployeeId, EmployeeName, AccountId, 
                      CASE WHEN IsDisabled = 1 THEN EmployeeNameWithCode + ' (Disabled)' ELSE EmployeeNameWithCode END AS EmployeeNameWithCodeWithDisabled
FROM         vueAccountEmployeeTimeEntryApprovalForReport
WHERE     (AccountId = @AccountId) AND (ApprovedByEmployeeId = @ApprovedByEmployeeId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="AccountId" ColumnName="AccountId" DataSourceName="TimeLive01MAR14.dbo.vueAccountEmployeeTimeEntryApprovalForReport" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ApprovedByEmployeeId" ColumnName="ApprovedByEmployeeId" DataSourceName="TimeLive01MAR14.dbo.vueAccountEmployeeTimeEntryApprovalForReport" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ApprovedByEmployeeId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ApprovedByEmployeeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="TL15Oct09.dbo.vueAccountEmployeeTimeEntryApprovalForReport" DbObjectType="View" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByAccountIdForApprovalEmployees" GetMethodModifier="Public" GetMethodName="GetDataByAccountIdForApprovalEmployees" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByAccountIdForApprovalEmployees" UserSourceName="GetDataByAccountIdForApprovalEmployees">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT DISTINCT ApprovedByEmployeeId, ApprovalEmployeeName, AccountId
FROM         vueAccountEmployeeTimeEntryApprovalForReport
WHERE     (AccountId = @AccountId) AND (ApprovedByEmployeeId = @ApprovedByEmployeeId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="AccountId" ColumnName="AccountId" DataSourceName="TL15Oct09.dbo.vueAccountEmployeeTimeEntryApprovalForReport" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ApprovedByEmployeeId" ColumnName="ApprovedByEmployeeId" DataSourceName="TL15Oct09.dbo.vueAccountEmployeeTimeEntryApprovalForReport" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ApprovedByEmployeeId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ApprovedByEmployeeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="TL15Oct09.dbo.vueAccountEmployeeTimeEntryApprovalForReport" DbObjectType="View" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByAccountIdForClient" GetMethodModifier="Public" GetMethodName="GetDataByAccountIdForClient" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByAccountIdForClient" UserSourceName="GetDataByAccountIdForClient">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT DISTINCT AccountClientId, PartyName, PartyNick, AccountId
FROM         vueAccountEmployeeTimeEntryApprovalForReport
WHERE     (AccountId = @AccountId) AND (ApprovedByEmployeeId = @ApprovedByEmployeeId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="AccountId" ColumnName="AccountId" DataSourceName="TL15Oct09.dbo.vueAccountEmployeeTimeEntryApprovalForReport" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ApprovedByEmployeeId" ColumnName="ApprovedByEmployeeId" DataSourceName="TL15Oct09.dbo.vueAccountEmployeeTimeEntryApprovalForReport" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ApprovedByEmployeeId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ApprovedByEmployeeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="TL15Oct09.dbo.vueAccountEmployeeTimeEntryApprovalForReport" DbObjectType="View" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByAccountIdForProject" GetMethodModifier="Public" GetMethodName="GetDataByAccountIdForProject" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByAccountIdForProject" UserSourceName="GetDataByAccountIdForProject">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT DISTINCT AccountProjectId, ProjectName, AccountId
FROM         vueAccountEmployeeTimeEntryApprovalForReport
WHERE     (AccountId = @AccountId) AND (ApprovedByEmployeeId = @ApprovedByEmployeeId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="AccountId" ColumnName="AccountId" DataSourceName="TL15Oct09.dbo.vueAccountEmployeeTimeEntryApprovalForReport" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ApprovedByEmployeeId" ColumnName="ApprovedByEmployeeId" DataSourceName="TL15Oct09.dbo.vueAccountEmployeeTimeEntryApprovalForReport" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ApprovedByEmployeeId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ApprovedByEmployeeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="TimeLive.dbo.vueAccountEmployeeTimeEntryApprovalForReport" DbObjectType="View" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByEmployeeId" GetMethodModifier="Public" GetMethodName="GetDataByEmployeeId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByEmployeeId" UserSourceName="GetDataByEmployeeId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT DISTINCT ApprovedByEmployeeId, EmployeeName, ApprovalEmployeeName, AccountId
FROM         vueAccountEmployeeTimeEntryApprovalForReport
WHERE     (ApprovedByEmployeeId = @ApprovedByEmployeeId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="ApprovedByEmployeeId" ColumnName="ApprovedByEmployeeId" DataSourceName="TL15Oct09.dbo.vueAccountEmployeeTimeEntryApprovalForReport" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ApprovedByEmployeeId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ApprovedByEmployeeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ApprovedByExpenseFilterTableAdapter" GeneratorDataComponentClassName="ApprovedByExpenseFilterTableAdapter" Name="ApprovedByExpenseFilter" UserDataComponentName="ApprovedByExpenseFilterTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="TimeLive.dbo.vueAccountExpenseEntryApprovalForReport" DbObjectType="View" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     AccountId
FROM         vueAccountExpenseEntryApprovalForReport</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="AccountId" DataSetColumn="AccountId" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="TimeLive.dbo.vueAccountExpenseEntryApprovalForReport" DbObjectType="View" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByAccountId" GetMethodModifier="Public" GetMethodName="GetDataByAccountId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByAccountId" UserSourceName="GetDataByAccountId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT DISTINCT 
                      AccountEmployeeId, EmployeeName, AccountId, 
                      CASE WHEN IsDisabled = 1 THEN EmployeeNameWithCode + ' (Disabled)' ELSE EmployeeNameWithCode END AS EmployeeNameWithCodeWithDisabled
FROM         vueAccountExpenseEntryApprovalForReport
WHERE     (AccountId = @AccountID) AND (ApprovedByEmployeeId = @ApprovedByEmployeeId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="AccountID" ColumnName="AccountId" DataSourceName="TimeLive.dbo.vueAccountExpenseEntryApprovalForReport" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ApprovedByEmployeeId" ColumnName="ApprovedByEmployeeId" DataSourceName="TimeLive.dbo.vueAccountExpenseEntryApprovalForReport" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ApprovedByEmployeeId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ApprovedByEmployeeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="TL15Oct09.dbo.vueAccountExpenseEntryApprovalForReport" DbObjectType="View" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByAccountIdForApprovalEmployees" GetMethodModifier="Public" GetMethodName="GetDataByAccountIdForApprovalEmployees" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByAccountIdForApprovalEmployees" UserSourceName="GetDataByAccountIdForApprovalEmployees">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT DISTINCT ApprovedByEmployeeId, ApprovalEmployeeName, AccountId
FROM         vueAccountExpenseEntryApprovalForReport
WHERE     (AccountId = @AccountId) AND (ApprovedByEmployeeId = @ApprovedByEmployeeId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="AccountId" ColumnName="AccountId" DataSourceName="TL15Oct09.dbo.vueAccountExpenseEntryApprovalForReport" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ApprovedByEmployeeId" ColumnName="ApprovedByEmployeeId" DataSourceName="TL15Oct09.dbo.vueAccountExpenseEntryApprovalForReport" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ApprovedByEmployeeId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ApprovedByEmployeeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="TL15Oct09.dbo.vueAccountExpenseEntryApprovalForReport" DbObjectType="View" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByAccountIdForClient" GetMethodModifier="Public" GetMethodName="GetDataByAccountIdForClient" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByAccountIdForClient" UserSourceName="GetDataByAccountIdForClient">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT DISTINCT AccountClientId, PartyName, AccountId
FROM         vueAccountExpenseEntryApprovalForReport
WHERE     (AccountId = @AccountId) AND (ApprovedByEmployeeId = @ApprovedByEmployeeId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="AccountId" ColumnName="AccountId" DataSourceName="TL15Oct09.dbo.vueAccountExpenseEntryApprovalForReport" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ApprovedByEmployeeId" ColumnName="ApprovedByEmployeeId" DataSourceName="TL15Oct09.dbo.vueAccountExpenseEntryApprovalForReport" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ApprovedByEmployeeId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ApprovedByEmployeeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="TL15Oct09.dbo.vueAccountExpenseEntryApprovalForReport" DbObjectType="View" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByAccountIdForProject" GetMethodModifier="Public" GetMethodName="GetDataByAccountIdForProject" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByAccountIdForProject" UserSourceName="GetDataByAccountIdForProject">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT DISTINCT AccountProjectId, ProjectName, AccountId
FROM         vueAccountExpenseEntryApprovalForReport
WHERE     (AccountId = @AccountId) AND (ApprovedByEmployeeId = @ApprovedByEmployeeId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="AccountId" ColumnName="AccountId" DataSourceName="TL15Oct09.dbo.vueAccountExpenseEntryApprovalForReport" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ApprovedByEmployeeId" ColumnName="ApprovedByEmployeeId" DataSourceName="TL15Oct09.dbo.vueAccountExpenseEntryApprovalForReport" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ApprovedByEmployeeId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ApprovedByEmployeeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="TimeLive.dbo.vueAccountExpenseEntryApprovalForReport" DbObjectType="View" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByEmployeeId" GetMethodModifier="Public" GetMethodName="GetDataByEmployeeId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByEmployeeId" UserSourceName="GetDataByEmployeeId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT DISTINCT ApprovedByEmployeeId, EmployeeName, ApprovalEmployeeName, AccountId
FROM         vueAccountExpenseEntryApprovalForReport
WHERE     (ApprovedByEmployeeId = @ApprovedByEmployeeId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="ApprovedByEmployeeId" ColumnName="ApprovedByEmployeeId" DataSourceName="TimeLive.dbo.vueAccountExpenseEntryApprovalForReport" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ApprovedByEmployeeId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ApprovedByEmployeeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ProjectTypeFilterTableAdapter" GeneratorDataComponentClassName="ProjectTypeFilterTableAdapter" Name="ProjectTypeFilter" UserDataComponentName="ProjectTypeFilterTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="TimeLive.dbo.AccountProjectType" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByAccountId" GetMethodModifier="Public" GetMethodName="GetDataByAccountId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetDataByAccountId" UserSourceName="GetDataByAccountId">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [AccountProjectType] WHERE (([AccountProjectTypeId] = @Original_AccountProjectTypeId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AccountProjectTypeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountProjectTypeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [AccountProjectType] ([ProjectType]) VALUES (@ProjectType)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ProjectType" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ProjectType" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     AccountProjectTypeId, ProjectType
FROM         AccountProjectType
WHERE     (AccountId = @AccountId)
ORDER BY ProjectType</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="AccountId" ColumnName="AccountId" DataSourceName="TimeLive.dbo.AccountProjectType" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [AccountProjectType] SET [ProjectType] = @ProjectType WHERE (([AccountProjectTypeId] = @Original_AccountProjectTypeId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ProjectType" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ProjectType" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AccountProjectTypeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountProjectTypeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="AccountProjectTypeId" DataSetColumn="AccountProjectTypeId" />
              <Mapping SourceColumn="ProjectType" DataSetColumn="ProjectType" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TimeOffTypeFilterTableAdapter" GeneratorDataComponentClassName="TimeOffTypeFilterTableAdapter" Name="TimeOffTypeFilter" UserDataComponentName="TimeOffTypeFilterTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="TL18082010.dbo.AccountTimeOffType" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByAccountId" GetMethodModifier="Public" GetMethodName="GetDataByAccountId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetDataByAccountId" UserSourceName="GetDataByAccountId">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [AccountTimeOffType] WHERE (([AccountTimeOffTypeId] = @Original_AccountTimeOffTypeId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@Original_AccountTimeOffTypeId" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="AccountTimeOffTypeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     AccountTimeOffTypeId, AccountTimeOffType, AccountId
FROM         AccountTimeOffType
WHERE     (AccountId = @AccountId) AND (IsDisabled &lt;&gt; 1)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="AccountId" ColumnName="AccountId" DataSourceName="TL18082010.dbo.AccountTimeOffType" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [AccountTimeOffType] SET [AccountTimeOffTypeId] = @AccountTimeOffTypeId, [AccountTimeOffType] = @AccountTimeOffType, [AccountId] = @AccountId WHERE (([AccountTimeOffTypeId] = @Original_AccountTimeOffTypeId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@AccountTimeOffTypeId" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="AccountTimeOffTypeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@AccountTimeOffType" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="AccountTimeOffType" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@AccountId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@Original_AccountTimeOffTypeId" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="AccountTimeOffTypeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="AccountTimeOffTypeId" DataSetColumn="AccountTimeOffTypeId" />
              <Mapping SourceColumn="AccountTimeOffType" DataSetColumn="AccountTimeOffType" />
              <Mapping SourceColumn="AccountId" DataSetColumn="AccountId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TimeOffPolicyFilterTableAdapter" GeneratorDataComponentClassName="TimeOffPolicyFilterTableAdapter" Name="TimeOffPolicyFilter" UserDataComponentName="TimeOffPolicyFilterTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="TL18082010.dbo.AccountTimeOffPolicy" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByAccountId" GetMethodModifier="Public" GetMethodName="GetDataByAccountId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetDataByAccountId" UserSourceName="GetDataByAccountId">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [AccountTimeOffPolicy] WHERE (([AccountTimeOffPolicyId] = @Original_AccountTimeOffPolicyId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@Original_AccountTimeOffPolicyId" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="AccountTimeOffPolicyId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     AccountTimeOffPolicyId, AccountTimeOffPolicy, AccountId
FROM         AccountTimeOffPolicy
WHERE     (AccountId = @AccountId) AND (IsDisabled &lt;&gt; 1)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="AccountId" ColumnName="AccountId" DataSourceName="TL18082010.dbo.AccountTimeOffPolicy" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [AccountTimeOffPolicy] SET [AccountTimeOffPolicyId] = @AccountTimeOffPolicyId, [AccountTimeOffPolicy] = @AccountTimeOffPolicy, [AccountId] = @AccountId WHERE (([AccountTimeOffPolicyId] = @Original_AccountTimeOffPolicyId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@AccountTimeOffPolicyId" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="AccountTimeOffPolicyId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@AccountTimeOffPolicy" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="AccountTimeOffPolicy" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@AccountId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@Original_AccountTimeOffPolicyId" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="AccountTimeOffPolicyId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="AccountTimeOffPolicyId" DataSetColumn="AccountTimeOffPolicyId" />
              <Mapping SourceColumn="AccountTimeOffPolicy" DataSetColumn="AccountTimeOffPolicy" />
              <Mapping SourceColumn="AccountId" DataSetColumn="AccountId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="WorkTypeFilterTableAdapter" GeneratorDataComponentClassName="WorkTypeFilterTableAdapter" Name="WorkTypeFilter" UserDataComponentName="WorkTypeFilterTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="TL18082010.dbo.AccountWorkType" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByAccountId" GetMethodModifier="Public" GetMethodName="GetDataByAccountId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetDataByAccountId" UserSourceName="GetDataByAccountId">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [AccountWorkType] WHERE (([AccountWorkTypeId] = @Original_AccountWorkTypeId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AccountWorkTypeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountWorkTypeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     AccountWorkTypeId, AccountWorkType, AccountWorkTypeCode
FROM         AccountWorkType
WHERE     (AccountId = @AccountId) AND (IsDisabled &lt;&gt; 1)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="AccountId" ColumnName="AccountId" DataSourceName="TL18082010.dbo.AccountWorkType" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [AccountWorkType] SET [AccountWorkType] = @AccountWorkType, [AccountWorkTypeCode] = @AccountWorkTypeCode WHERE (([AccountWorkTypeId] = @Original_AccountWorkTypeId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@AccountWorkType" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="AccountWorkType" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@AccountWorkTypeCode" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="AccountWorkTypeCode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AccountWorkTypeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountWorkTypeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="AccountWorkTypeId" DataSetColumn="AccountWorkTypeId" />
              <Mapping SourceColumn="AccountWorkType" DataSetColumn="AccountWorkType" />
              <Mapping SourceColumn="AccountWorkTypeCode" DataSetColumn="AccountWorkTypeCode" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CostCenterFilterTableAdapter" GeneratorDataComponentClassName="CostCenterFilterTableAdapter" Name="CostCenterFilter" UserDataComponentName="CostCenterFilterTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="TLH20FEB13.dbo.AccountCostCenter" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByAccountId" GetMethodModifier="Public" GetMethodName="GetDataByAccountId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetDataByAccountId" UserSourceName="GetDataByAccountId">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [AccountCostCenter] WHERE (([AccountCostCenterId] = @Original_AccountCostCenterId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AccountCostCenterId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountCostCenterId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     AccountCostCenterId, AccountCostCenter, AccountCostCenterCode
FROM         AccountCostCenter
WHERE     (AccountId = @AccountId) AND (IsDisabled &lt;&gt; 1)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="AccountId" ColumnName="AccountId" DataSourceName="TLH20FEB13.dbo.AccountCostCenter" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [AccountCostCenter] SET [AccountCostCenter] = @AccountCostCenter, [AccountCostCenterCode] = @AccountCostCenterCode WHERE (([AccountCostCenterId] = @Original_AccountCostCenterId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@AccountCostCenter" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="AccountCostCenter" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@AccountCostCenterCode" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="AccountCostCenterCode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AccountCostCenterId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountCostCenterId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="AccountCostCenterId" DataSetColumn="AccountCostCenterId" />
              <Mapping SourceColumn="AccountCostCenter" DataSetColumn="AccountCostCenter" />
              <Mapping SourceColumn="AccountCostCenterCode" DataSetColumn="AccountCostCenterCode" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="dsReportFilterSource" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_DataSetName="dsReportFilterSource" msprop:Generator_UserDSName="dsReportFilterSource">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="EmployeeFilter" msprop:Generator_UserTableName="EmployeeFilter" msprop:Generator_RowEvArgName="EmployeeFilterRowChangeEvent" msprop:Generator_TableVarName="tableEmployeeFilter" msprop:Generator_TablePropName="EmployeeFilter" msprop:Generator_RowDeletingName="EmployeeFilterRowDeleting" msprop:Generator_RowChangingName="EmployeeFilterRowChanging" msprop:Generator_RowDeletedName="EmployeeFilterRowDeleted" msprop:Generator_RowEvHandlerName="EmployeeFilterRowChangeEventHandler" msprop:Generator_TableClassName="EmployeeFilterDataTable" msprop:Generator_RowChangedName="EmployeeFilterRowChanged" msprop:Generator_RowClassName="EmployeeFilterRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="EmployeeNameWithCode" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnEmployeeNameWithCode" msprop:Generator_ColumnPropNameInRow="EmployeeNameWithCode" msprop:Generator_ColumnPropNameInTable="EmployeeNameWithCodeColumn" msprop:Generator_UserColumnName="EmployeeNameWithCode" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="404" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="AccountEmployeeId" msprop:Generator_ColumnVarNameInTable="columnAccountEmployeeId" msprop:Generator_ColumnPropNameInRow="AccountEmployeeId" msprop:Generator_ColumnPropNameInTable="AccountEmployeeIdColumn" msprop:Generator_UserColumnName="AccountEmployeeId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="DepartmentFilter" msprop:Generator_UserTableName="DepartmentFilter" msprop:Generator_RowEvArgName="DepartmentFilterRowChangeEvent" msprop:Generator_TableVarName="tableDepartmentFilter" msprop:Generator_TablePropName="DepartmentFilter" msprop:Generator_RowDeletingName="DepartmentFilterRowDeleting" msprop:Generator_RowChangingName="DepartmentFilterRowChanging" msprop:Generator_RowDeletedName="DepartmentFilterRowDeleted" msprop:Generator_RowEvHandlerName="DepartmentFilterRowChangeEventHandler" msprop:Generator_TableClassName="DepartmentFilterDataTable" msprop:Generator_RowChangedName="DepartmentFilterRowChanged" msprop:Generator_RowClassName="DepartmentFilterRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="AccountDepartmentId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msprop:Generator_ColumnVarNameInTable="columnAccountDepartmentId" msprop:Generator_ColumnPropNameInRow="AccountDepartmentId" msprop:Generator_ColumnPropNameInTable="AccountDepartmentIdColumn" msprop:Generator_UserColumnName="AccountDepartmentId" type="xs:int" />
              <xs:element name="DepartmentCode" msprop:Generator_ColumnVarNameInTable="columnDepartmentCode" msprop:Generator_ColumnPropNameInRow="DepartmentCode" msprop:Generator_ColumnPropNameInTable="DepartmentCodeColumn" msprop:Generator_UserColumnName="DepartmentCode">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="DepartmentName" msprop:Generator_ColumnVarNameInTable="columnDepartmentName" msprop:Generator_ColumnPropNameInRow="DepartmentName" msprop:Generator_ColumnPropNameInTable="DepartmentNameColumn" msprop:Generator_UserColumnName="DepartmentName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="400" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ProjectFilter" msprop:Generator_UserTableName="ProjectFilter" msprop:Generator_RowEvArgName="ProjectFilterRowChangeEvent" msprop:Generator_TableVarName="tableProjectFilter" msprop:Generator_TablePropName="ProjectFilter" msprop:Generator_RowDeletingName="ProjectFilterRowDeleting" msprop:Generator_RowChangingName="ProjectFilterRowChanging" msprop:Generator_RowDeletedName="ProjectFilterRowDeleted" msprop:Generator_RowEvHandlerName="ProjectFilterRowChangeEventHandler" msprop:Generator_TableClassName="ProjectFilterDataTable" msprop:Generator_RowChangedName="ProjectFilterRowChanged" msprop:Generator_RowClassName="ProjectFilterRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="AccountProjectId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msprop:Generator_ColumnVarNameInTable="columnAccountProjectId" msprop:Generator_ColumnPropNameInRow="AccountProjectId" msprop:Generator_ColumnPropNameInTable="AccountProjectIdColumn" msprop:Generator_UserColumnName="AccountProjectId" type="xs:int" />
              <xs:element name="ProjectName" msprop:Generator_ColumnVarNameInTable="columnProjectName" msprop:Generator_ColumnPropNameInRow="ProjectName" msprop:Generator_ColumnPropNameInTable="ProjectNameColumn" msprop:Generator_UserColumnName="ProjectName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ProjectDescription" msprop:Generator_ColumnVarNameInTable="columnProjectDescription" msprop:Generator_ColumnPropNameInRow="ProjectDescription" msprop:Generator_ColumnPropNameInTable="ProjectDescriptionColumn" msprop:Generator_UserColumnName="ProjectDescription">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="LocationFilter" msprop:Generator_UserTableName="LocationFilter" msprop:Generator_RowEvArgName="LocationFilterRowChangeEvent" msprop:Generator_TableVarName="tableLocationFilter" msprop:Generator_TablePropName="LocationFilter" msprop:Generator_RowDeletingName="LocationFilterRowDeleting" msprop:Generator_RowChangingName="LocationFilterRowChanging" msprop:Generator_RowDeletedName="LocationFilterRowDeleted" msprop:Generator_RowEvHandlerName="LocationFilterRowChangeEventHandler" msprop:Generator_TableClassName="LocationFilterDataTable" msprop:Generator_RowChangedName="LocationFilterRowChanged" msprop:Generator_RowClassName="LocationFilterRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="AccountLocationId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msprop:Generator_ColumnVarNameInTable="columnAccountLocationId" msprop:Generator_ColumnPropNameInRow="AccountLocationId" msprop:Generator_ColumnPropNameInTable="AccountLocationIdColumn" msprop:Generator_UserColumnName="AccountLocationId" type="xs:int" />
              <xs:element name="AccountLocation" msprop:Generator_ColumnVarNameInTable="columnAccountLocation" msprop:Generator_ColumnPropNameInRow="AccountLocation" msprop:Generator_ColumnPropNameInTable="AccountLocationColumn" msprop:Generator_UserColumnName="AccountLocation">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ClientFilter" msprop:Generator_UserTableName="ClientFilter" msprop:Generator_RowEvArgName="ClientFilterRowChangeEvent" msprop:Generator_TableVarName="tableClientFilter" msprop:Generator_TablePropName="ClientFilter" msprop:Generator_RowDeletingName="ClientFilterRowDeleting" msprop:Generator_RowChangingName="ClientFilterRowChanging" msprop:Generator_RowDeletedName="ClientFilterRowDeleted" msprop:Generator_RowEvHandlerName="ClientFilterRowChangeEventHandler" msprop:Generator_TableClassName="ClientFilterDataTable" msprop:Generator_RowChangedName="ClientFilterRowChanged" msprop:Generator_RowClassName="ClientFilterRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="AccountPartyId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msprop:Generator_ColumnVarNameInTable="columnAccountPartyId" msprop:Generator_ColumnPropNameInRow="AccountPartyId" msprop:Generator_ColumnPropNameInTable="AccountPartyIdColumn" msprop:Generator_UserColumnName="AccountPartyId" type="xs:int" />
              <xs:element name="PartyNick" msprop:Generator_ColumnVarNameInTable="columnPartyNick" msprop:Generator_ColumnPropNameInRow="PartyNick" msprop:Generator_ColumnPropNameInTable="PartyNickColumn" msprop:Generator_UserColumnName="PartyNick">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="PartyName" msprop:Generator_ColumnVarNameInTable="columnPartyName" msprop:Generator_ColumnPropNameInRow="PartyName" msprop:Generator_ColumnPropNameInTable="PartyNameColumn" msprop:Generator_UserColumnName="PartyName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="400" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ProjectTaskFilter" msprop:Generator_UserTableName="ProjectTaskFilter" msprop:Generator_RowEvArgName="ProjectTaskFilterRowChangeEvent" msprop:Generator_TableVarName="tableProjectTaskFilter" msprop:Generator_TablePropName="ProjectTaskFilter" msprop:Generator_RowDeletingName="ProjectTaskFilterRowDeleting" msprop:Generator_RowChangingName="ProjectTaskFilterRowChanging" msprop:Generator_RowDeletedName="ProjectTaskFilterRowDeleted" msprop:Generator_RowEvHandlerName="ProjectTaskFilterRowChangeEventHandler" msprop:Generator_TableClassName="ProjectTaskFilterDataTable" msprop:Generator_RowChangedName="ProjectTaskFilterRowChanged" msprop:Generator_RowClassName="ProjectTaskFilterRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="AccountProjectTaskId" msprop:Generator_ColumnVarNameInTable="columnAccountProjectTaskId" msprop:Generator_ColumnPropNameInRow="AccountProjectTaskId" msprop:Generator_ColumnPropNameInTable="AccountProjectTaskIdColumn" msprop:Generator_UserColumnName="AccountProjectTaskId" type="xs:long" />
              <xs:element name="TaskName" msprop:Generator_ColumnVarNameInTable="columnTaskName" msprop:Generator_ColumnPropNameInRow="TaskName" msprop:Generator_ColumnPropNameInTable="TaskNameColumn" msprop:Generator_UserColumnName="TaskName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="200" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="TaskDescription" msprop:Generator_ColumnVarNameInTable="columnTaskDescription" msprop:Generator_ColumnPropNameInRow="TaskDescription" msprop:Generator_ColumnPropNameInTable="TaskDescriptionColumn" msprop:Generator_UserColumnName="TaskDescription">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ExpenseTypeFilter" msprop:Generator_TableClassName="ExpenseTypeFilterDataTable" msprop:Generator_TableVarName="tableExpenseTypeFilter" msprop:Generator_TablePropName="ExpenseTypeFilter" msprop:Generator_RowDeletingName="ExpenseTypeFilterRowDeleting" msprop:Generator_RowChangingName="ExpenseTypeFilterRowChanging" msprop:Generator_RowEvHandlerName="ExpenseTypeFilterRowChangeEventHandler" msprop:Generator_RowDeletedName="ExpenseTypeFilterRowDeleted" msprop:Generator_UserTableName="ExpenseTypeFilter" msprop:Generator_RowChangedName="ExpenseTypeFilterRowChanged" msprop:Generator_RowEvArgName="ExpenseTypeFilterRowChangeEvent" msprop:Generator_RowClassName="ExpenseTypeFilterRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="AccountExpenseTypeId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msprop:Generator_ColumnVarNameInTable="columnAccountExpenseTypeId" msprop:Generator_ColumnPropNameInRow="AccountExpenseTypeId" msprop:Generator_ColumnPropNameInTable="AccountExpenseTypeIdColumn" msprop:Generator_UserColumnName="AccountExpenseTypeId" type="xs:int" />
              <xs:element name="ExpenseType" msprop:Generator_ColumnVarNameInTable="columnExpenseType" msprop:Generator_ColumnPropNameInRow="ExpenseType" msprop:Generator_ColumnPropNameInTable="ExpenseTypeColumn" msprop:Generator_UserColumnName="ExpenseType">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ExpenseFilter" msprop:Generator_TableClassName="ExpenseFilterDataTable" msprop:Generator_TableVarName="tableExpenseFilter" msprop:Generator_TablePropName="ExpenseFilter" msprop:Generator_RowDeletingName="ExpenseFilterRowDeleting" msprop:Generator_RowChangingName="ExpenseFilterRowChanging" msprop:Generator_RowEvHandlerName="ExpenseFilterRowChangeEventHandler" msprop:Generator_RowDeletedName="ExpenseFilterRowDeleted" msprop:Generator_UserTableName="ExpenseFilter" msprop:Generator_RowChangedName="ExpenseFilterRowChanged" msprop:Generator_RowEvArgName="ExpenseFilterRowChangeEvent" msprop:Generator_RowClassName="ExpenseFilterRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="AccountExpenseId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msprop:Generator_ColumnVarNameInTable="columnAccountExpenseId" msprop:Generator_ColumnPropNameInRow="AccountExpenseId" msprop:Generator_ColumnPropNameInTable="AccountExpenseIdColumn" msprop:Generator_UserColumnName="AccountExpenseId" type="xs:int" />
              <xs:element name="AccountExpenseName" msprop:Generator_ColumnVarNameInTable="columnAccountExpenseName" msprop:Generator_ColumnPropNameInRow="AccountExpenseName" msprop:Generator_ColumnPropNameInTable="AccountExpenseNameColumn" msprop:Generator_UserColumnName="AccountExpenseName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="200" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="RoleFilter" msprop:Generator_TableClassName="RoleFilterDataTable" msprop:Generator_TableVarName="tableRoleFilter" msprop:Generator_TablePropName="RoleFilter" msprop:Generator_RowDeletingName="RoleFilterRowDeleting" msprop:Generator_RowChangingName="RoleFilterRowChanging" msprop:Generator_RowEvHandlerName="RoleFilterRowChangeEventHandler" msprop:Generator_RowDeletedName="RoleFilterRowDeleted" msprop:Generator_UserTableName="RoleFilter" msprop:Generator_RowChangedName="RoleFilterRowChanged" msprop:Generator_RowEvArgName="RoleFilterRowChangeEvent" msprop:Generator_RowClassName="RoleFilterRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="AccountRoleId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msprop:Generator_ColumnVarNameInTable="columnAccountRoleId" msprop:Generator_ColumnPropNameInRow="AccountRoleId" msprop:Generator_ColumnPropNameInTable="AccountRoleIdColumn" msprop:Generator_UserColumnName="AccountRoleId" type="xs:int" />
              <xs:element name="Role" msprop:Generator_ColumnVarNameInTable="columnRole" msprop:Generator_ColumnPropNameInRow="Role" msprop:Generator_ColumnPropNameInTable="RoleColumn" msprop:Generator_UserColumnName="Role">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="StatusFilter" msprop:Generator_TableClassName="StatusFilterDataTable" msprop:Generator_TableVarName="tableStatusFilter" msprop:Generator_TablePropName="StatusFilter" msprop:Generator_RowDeletingName="StatusFilterRowDeleting" msprop:Generator_RowChangingName="StatusFilterRowChanging" msprop:Generator_RowEvHandlerName="StatusFilterRowChangeEventHandler" msprop:Generator_RowDeletedName="StatusFilterRowDeleted" msprop:Generator_UserTableName="StatusFilter" msprop:Generator_RowChangedName="StatusFilterRowChanged" msprop:Generator_RowEvArgName="StatusFilterRowChangeEvent" msprop:Generator_RowClassName="StatusFilterRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="AccountStatusId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msprop:Generator_ColumnVarNameInTable="columnAccountStatusId" msprop:Generator_ColumnPropNameInRow="AccountStatusId" msprop:Generator_ColumnPropNameInTable="AccountStatusIdColumn" msprop:Generator_UserColumnName="AccountStatusId" type="xs:int" />
              <xs:element name="Status" msprop:Generator_ColumnVarNameInTable="columnStatus" msprop:Generator_ColumnPropNameInRow="Status" msprop:Generator_ColumnPropNameInTable="StatusColumn" msprop:Generator_UserColumnName="Status">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="90" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="CurrencyFilter" msprop:Generator_TableClassName="CurrencyFilterDataTable" msprop:Generator_TableVarName="tableCurrencyFilter" msprop:Generator_TablePropName="CurrencyFilter" msprop:Generator_RowDeletingName="CurrencyFilterRowDeleting" msprop:Generator_RowChangingName="CurrencyFilterRowChanging" msprop:Generator_RowEvHandlerName="CurrencyFilterRowChangeEventHandler" msprop:Generator_RowDeletedName="CurrencyFilterRowDeleted" msprop:Generator_UserTableName="CurrencyFilter" msprop:Generator_RowChangedName="CurrencyFilterRowChanged" msprop:Generator_RowEvArgName="CurrencyFilterRowChangeEvent" msprop:Generator_RowClassName="CurrencyFilterRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Currency" msprop:Generator_ColumnVarNameInTable="columnCurrency" msprop:Generator_ColumnPropNameInRow="Currency" msprop:Generator_ColumnPropNameInTable="CurrencyColumn" msprop:Generator_UserColumnName="Currency" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CurrencyCode" msprop:Generator_ColumnVarNameInTable="columnCurrencyCode" msprop:Generator_ColumnPropNameInRow="CurrencyCode" msprop:Generator_ColumnPropNameInTable="CurrencyCodeColumn" msprop:Generator_UserColumnName="CurrencyCode" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="AccountCurrencyId" msprop:Generator_ColumnVarNameInTable="columnAccountCurrencyId" msprop:Generator_ColumnPropNameInRow="AccountCurrencyId" msprop:Generator_ColumnPropNameInTable="AccountCurrencyIdColumn" msprop:Generator_UserColumnName="AccountCurrencyId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TaskTypeFilter" msprop:Generator_TableClassName="TaskTypeFilterDataTable" msprop:Generator_TableVarName="tableTaskTypeFilter" msprop:Generator_TablePropName="TaskTypeFilter" msprop:Generator_RowDeletingName="TaskTypeFilterRowDeleting" msprop:Generator_RowChangingName="TaskTypeFilterRowChanging" msprop:Generator_RowEvHandlerName="TaskTypeFilterRowChangeEventHandler" msprop:Generator_RowDeletedName="TaskTypeFilterRowDeleted" msprop:Generator_UserTableName="TaskTypeFilter" msprop:Generator_RowChangedName="TaskTypeFilterRowChanged" msprop:Generator_RowEvArgName="TaskTypeFilterRowChangeEvent" msprop:Generator_RowClassName="TaskTypeFilterRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="AccountTaskTypeId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msprop:Generator_ColumnVarNameInTable="columnAccountTaskTypeId" msprop:Generator_ColumnPropNameInRow="AccountTaskTypeId" msprop:Generator_ColumnPropNameInTable="AccountTaskTypeIdColumn" msprop:Generator_UserColumnName="AccountTaskTypeId" type="xs:int" />
              <xs:element name="TaskType" msprop:Generator_ColumnVarNameInTable="columnTaskType" msprop:Generator_ColumnPropNameInRow="TaskType" msprop:Generator_ColumnPropNameInTable="TaskTypeColumn" msprop:Generator_UserColumnName="TaskType">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="AccountId" msprop:Generator_ColumnVarNameInTable="columnAccountId" msprop:Generator_ColumnPropNameInRow="AccountId" msprop:Generator_ColumnPropNameInTable="AccountIdColumn" msprop:Generator_UserColumnName="AccountId" type="xs:int" />
              <xs:element name="CreatedOn" msprop:Generator_ColumnVarNameInTable="columnCreatedOn" msprop:Generator_ColumnPropNameInRow="CreatedOn" msprop:Generator_ColumnPropNameInTable="CreatedOnColumn" msprop:Generator_UserColumnName="CreatedOn" type="xs:dateTime" />
              <xs:element name="CreatedByEmployeeId" msprop:Generator_ColumnVarNameInTable="columnCreatedByEmployeeId" msprop:Generator_ColumnPropNameInRow="CreatedByEmployeeId" msprop:Generator_ColumnPropNameInTable="CreatedByEmployeeIdColumn" msprop:Generator_UserColumnName="CreatedByEmployeeId" type="xs:int" />
              <xs:element name="ModifiedOn" msprop:Generator_ColumnVarNameInTable="columnModifiedOn" msprop:Generator_ColumnPropNameInRow="ModifiedOn" msprop:Generator_ColumnPropNameInTable="ModifiedOnColumn" msprop:Generator_UserColumnName="ModifiedOn" type="xs:dateTime" />
              <xs:element name="ModifiedByEmployeeId" msprop:Generator_ColumnVarNameInTable="columnModifiedByEmployeeId" msprop:Generator_ColumnPropNameInRow="ModifiedByEmployeeId" msprop:Generator_ColumnPropNameInTable="ModifiedByEmployeeIdColumn" msprop:Generator_UserColumnName="ModifiedByEmployeeId" type="xs:int" />
              <xs:element name="MasterAccountTaskTypeId" msprop:Generator_ColumnVarNameInTable="columnMasterAccountTaskTypeId" msprop:Generator_ColumnPropNameInRow="MasterAccountTaskTypeId" msprop:Generator_ColumnPropNameInTable="MasterAccountTaskTypeIdColumn" msprop:Generator_UserColumnName="MasterAccountTaskTypeId" type="xs:short" minOccurs="0" />
              <xs:element name="IsDisabled" msprop:Generator_ColumnVarNameInTable="columnIsDisabled" msprop:Generator_ColumnPropNameInRow="IsDisabled" msprop:Generator_ColumnPropNameInTable="IsDisabledColumn" msprop:Generator_UserColumnName="IsDisabled" type="xs:boolean" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="PriorityFilter" msprop:Generator_TableClassName="PriorityFilterDataTable" msprop:Generator_TableVarName="tablePriorityFilter" msprop:Generator_TablePropName="PriorityFilter" msprop:Generator_RowDeletingName="PriorityFilterRowDeleting" msprop:Generator_RowChangingName="PriorityFilterRowChanging" msprop:Generator_RowEvHandlerName="PriorityFilterRowChangeEventHandler" msprop:Generator_RowDeletedName="PriorityFilterRowDeleted" msprop:Generator_UserTableName="PriorityFilter" msprop:Generator_RowChangedName="PriorityFilterRowChanged" msprop:Generator_RowEvArgName="PriorityFilterRowChangeEvent" msprop:Generator_RowClassName="PriorityFilterRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="AccountPriorityId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msprop:Generator_ColumnVarNameInTable="columnAccountPriorityId" msprop:Generator_ColumnPropNameInRow="AccountPriorityId" msprop:Generator_ColumnPropNameInTable="AccountPriorityIdColumn" msprop:Generator_UserColumnName="AccountPriorityId" type="xs:int" />
              <xs:element name="AccountId" msprop:Generator_ColumnVarNameInTable="columnAccountId" msprop:Generator_ColumnPropNameInRow="AccountId" msprop:Generator_ColumnPropNameInTable="AccountIdColumn" msprop:Generator_UserColumnName="AccountId" type="xs:int" />
              <xs:element name="Priority" msprop:Generator_ColumnVarNameInTable="columnPriority" msprop:Generator_ColumnPropNameInRow="Priority" msprop:Generator_ColumnPropNameInTable="PriorityColumn" msprop:Generator_UserColumnName="Priority">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="PriorityOrder" msprop:Generator_ColumnVarNameInTable="columnPriorityOrder" msprop:Generator_ColumnPropNameInRow="PriorityOrder" msprop:Generator_ColumnPropNameInTable="PriorityOrderColumn" msprop:Generator_UserColumnName="PriorityOrder" type="xs:unsignedByte" />
              <xs:element name="IsDisabled" msprop:Generator_ColumnVarNameInTable="columnIsDisabled" msprop:Generator_ColumnPropNameInRow="IsDisabled" msprop:Generator_ColumnPropNameInTable="IsDisabledColumn" msprop:Generator_UserColumnName="IsDisabled" type="xs:boolean" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ApprovedByTimeEntryFilter" msprop:Generator_TableClassName="ApprovedByTimeEntryFilterDataTable" msprop:Generator_TableVarName="tableApprovedByTimeEntryFilter" msprop:Generator_TablePropName="ApprovedByTimeEntryFilter" msprop:Generator_RowDeletingName="ApprovedByTimeEntryFilterRowDeleting" msprop:Generator_RowChangingName="ApprovedByTimeEntryFilterRowChanging" msprop:Generator_RowEvHandlerName="ApprovedByTimeEntryFilterRowChangeEventHandler" msprop:Generator_RowDeletedName="ApprovedByTimeEntryFilterRowDeleted" msprop:Generator_UserTableName="ApprovedByTimeEntryFilter" msprop:Generator_RowChangedName="ApprovedByTimeEntryFilterRowChanged" msprop:Generator_RowEvArgName="ApprovedByTimeEntryFilterRowChangeEvent" msprop:Generator_RowClassName="ApprovedByTimeEntryFilterRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="AccountId" msprop:Generator_ColumnVarNameInTable="columnAccountId" msprop:Generator_ColumnPropNameInRow="AccountId" msprop:Generator_ColumnPropNameInTable="AccountIdColumn" msprop:Generator_UserColumnName="AccountId" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ApprovedByExpenseFilter" msprop:Generator_TableClassName="ApprovedByExpenseFilterDataTable" msprop:Generator_TableVarName="tableApprovedByExpenseFilter" msprop:Generator_TablePropName="ApprovedByExpenseFilter" msprop:Generator_RowDeletingName="ApprovedByExpenseFilterRowDeleting" msprop:Generator_RowChangingName="ApprovedByExpenseFilterRowChanging" msprop:Generator_RowEvHandlerName="ApprovedByExpenseFilterRowChangeEventHandler" msprop:Generator_RowDeletedName="ApprovedByExpenseFilterRowDeleted" msprop:Generator_UserTableName="ApprovedByExpenseFilter" msprop:Generator_RowChangedName="ApprovedByExpenseFilterRowChanged" msprop:Generator_RowEvArgName="ApprovedByExpenseFilterRowChangeEvent" msprop:Generator_RowClassName="ApprovedByExpenseFilterRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="AccountId" msprop:Generator_ColumnVarNameInTable="columnAccountId" msprop:Generator_ColumnPropNameInRow="AccountId" msprop:Generator_ColumnPropNameInTable="AccountIdColumn" msprop:Generator_UserColumnName="AccountId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ProjectTypeFilter" msprop:Generator_TableClassName="ProjectTypeFilterDataTable" msprop:Generator_TableVarName="tableProjectTypeFilter" msprop:Generator_TablePropName="ProjectTypeFilter" msprop:Generator_RowDeletingName="ProjectTypeFilterRowDeleting" msprop:Generator_RowChangingName="ProjectTypeFilterRowChanging" msprop:Generator_RowEvHandlerName="ProjectTypeFilterRowChangeEventHandler" msprop:Generator_RowDeletedName="ProjectTypeFilterRowDeleted" msprop:Generator_UserTableName="ProjectTypeFilter" msprop:Generator_RowChangedName="ProjectTypeFilterRowChanged" msprop:Generator_RowEvArgName="ProjectTypeFilterRowChangeEvent" msprop:Generator_RowClassName="ProjectTypeFilterRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="AccountProjectTypeId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msprop:Generator_ColumnVarNameInTable="columnAccountProjectTypeId" msprop:Generator_ColumnPropNameInRow="AccountProjectTypeId" msprop:Generator_ColumnPropNameInTable="AccountProjectTypeIdColumn" msprop:Generator_UserColumnName="AccountProjectTypeId" type="xs:int" />
              <xs:element name="ProjectType" msprop:Generator_ColumnVarNameInTable="columnProjectType" msprop:Generator_ColumnPropNameInRow="ProjectType" msprop:Generator_ColumnPropNameInTable="ProjectTypeColumn" msprop:Generator_UserColumnName="ProjectType">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="200" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TimeOffTypeFilter" msprop:Generator_TableClassName="TimeOffTypeFilterDataTable" msprop:Generator_TableVarName="tableTimeOffTypeFilter" msprop:Generator_TablePropName="TimeOffTypeFilter" msprop:Generator_RowDeletingName="TimeOffTypeFilterRowDeleting" msprop:Generator_RowChangingName="TimeOffTypeFilterRowChanging" msprop:Generator_RowEvHandlerName="TimeOffTypeFilterRowChangeEventHandler" msprop:Generator_RowDeletedName="TimeOffTypeFilterRowDeleted" msprop:Generator_UserTableName="TimeOffTypeFilter" msprop:Generator_RowChangedName="TimeOffTypeFilterRowChanged" msprop:Generator_RowEvArgName="TimeOffTypeFilterRowChangeEvent" msprop:Generator_RowClassName="TimeOffTypeFilterRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="AccountTimeOffTypeId" msdata:DataType="System.Guid, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" msprop:Generator_ColumnVarNameInTable="columnAccountTimeOffTypeId" msprop:Generator_ColumnPropNameInRow="AccountTimeOffTypeId" msprop:Generator_ColumnPropNameInTable="AccountTimeOffTypeIdColumn" msprop:Generator_UserColumnName="AccountTimeOffTypeId" type="xs:string" />
              <xs:element name="AccountTimeOffType" msprop:Generator_ColumnVarNameInTable="columnAccountTimeOffType" msprop:Generator_ColumnPropNameInRow="AccountTimeOffType" msprop:Generator_ColumnPropNameInTable="AccountTimeOffTypeColumn" msprop:Generator_UserColumnName="AccountTimeOffType">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="AccountId" msprop:Generator_ColumnVarNameInTable="columnAccountId" msprop:Generator_ColumnPropNameInRow="AccountId" msprop:Generator_ColumnPropNameInTable="AccountIdColumn" msprop:Generator_UserColumnName="AccountId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TimeOffPolicyFilter" msprop:Generator_TableClassName="TimeOffPolicyFilterDataTable" msprop:Generator_TableVarName="tableTimeOffPolicyFilter" msprop:Generator_TablePropName="TimeOffPolicyFilter" msprop:Generator_RowDeletingName="TimeOffPolicyFilterRowDeleting" msprop:Generator_RowChangingName="TimeOffPolicyFilterRowChanging" msprop:Generator_RowEvHandlerName="TimeOffPolicyFilterRowChangeEventHandler" msprop:Generator_RowDeletedName="TimeOffPolicyFilterRowDeleted" msprop:Generator_UserTableName="TimeOffPolicyFilter" msprop:Generator_RowChangedName="TimeOffPolicyFilterRowChanged" msprop:Generator_RowEvArgName="TimeOffPolicyFilterRowChangeEvent" msprop:Generator_RowClassName="TimeOffPolicyFilterRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="AccountTimeOffPolicyId" msdata:DataType="System.Guid, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" msprop:Generator_ColumnVarNameInTable="columnAccountTimeOffPolicyId" msprop:Generator_ColumnPropNameInRow="AccountTimeOffPolicyId" msprop:Generator_ColumnPropNameInTable="AccountTimeOffPolicyIdColumn" msprop:Generator_UserColumnName="AccountTimeOffPolicyId" type="xs:string" />
              <xs:element name="AccountTimeOffPolicy" msprop:Generator_ColumnVarNameInTable="columnAccountTimeOffPolicy" msprop:Generator_ColumnPropNameInRow="AccountTimeOffPolicy" msprop:Generator_ColumnPropNameInTable="AccountTimeOffPolicyColumn" msprop:Generator_UserColumnName="AccountTimeOffPolicy">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="AccountId" msprop:Generator_ColumnVarNameInTable="columnAccountId" msprop:Generator_ColumnPropNameInRow="AccountId" msprop:Generator_ColumnPropNameInTable="AccountIdColumn" msprop:Generator_UserColumnName="AccountId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="WorkTypeFilter" msprop:Generator_TableClassName="WorkTypeFilterDataTable" msprop:Generator_TableVarName="tableWorkTypeFilter" msprop:Generator_TablePropName="WorkTypeFilter" msprop:Generator_RowDeletingName="WorkTypeFilterRowDeleting" msprop:Generator_RowChangingName="WorkTypeFilterRowChanging" msprop:Generator_RowEvHandlerName="WorkTypeFilterRowChangeEventHandler" msprop:Generator_RowDeletedName="WorkTypeFilterRowDeleted" msprop:Generator_UserTableName="WorkTypeFilter" msprop:Generator_RowChangedName="WorkTypeFilterRowChanged" msprop:Generator_RowEvArgName="WorkTypeFilterRowChangeEvent" msprop:Generator_RowClassName="WorkTypeFilterRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="AccountWorkTypeId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msprop:Generator_ColumnVarNameInTable="columnAccountWorkTypeId" msprop:Generator_ColumnPropNameInRow="AccountWorkTypeId" msprop:Generator_ColumnPropNameInTable="AccountWorkTypeIdColumn" msprop:Generator_UserColumnName="AccountWorkTypeId" type="xs:int" />
              <xs:element name="AccountWorkType" msprop:Generator_ColumnVarNameInTable="columnAccountWorkType" msprop:Generator_ColumnPropNameInRow="AccountWorkType" msprop:Generator_ColumnPropNameInTable="AccountWorkTypeColumn" msprop:Generator_UserColumnName="AccountWorkType">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="AccountWorkTypeCode" msprop:Generator_ColumnVarNameInTable="columnAccountWorkTypeCode" msprop:Generator_ColumnPropNameInRow="AccountWorkTypeCode" msprop:Generator_ColumnPropNameInTable="AccountWorkTypeCodeColumn" msprop:Generator_UserColumnName="AccountWorkTypeCode">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="6" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="CostCenterFilter" msprop:Generator_TableClassName="CostCenterFilterDataTable" msprop:Generator_TableVarName="tableCostCenterFilter" msprop:Generator_TablePropName="CostCenterFilter" msprop:Generator_RowDeletingName="CostCenterFilterRowDeleting" msprop:Generator_RowChangingName="CostCenterFilterRowChanging" msprop:Generator_RowEvHandlerName="CostCenterFilterRowChangeEventHandler" msprop:Generator_RowDeletedName="CostCenterFilterRowDeleted" msprop:Generator_UserTableName="CostCenterFilter" msprop:Generator_RowChangedName="CostCenterFilterRowChanged" msprop:Generator_RowEvArgName="CostCenterFilterRowChangeEvent" msprop:Generator_RowClassName="CostCenterFilterRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="AccountCostCenterId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnAccountCostCenterId" msprop:Generator_ColumnPropNameInRow="AccountCostCenterId" msprop:Generator_ColumnPropNameInTable="AccountCostCenterIdColumn" msprop:Generator_UserColumnName="AccountCostCenterId" type="xs:int" />
              <xs:element name="AccountCostCenter" msprop:Generator_ColumnVarNameInTable="columnAccountCostCenter" msprop:Generator_ColumnPropNameInRow="AccountCostCenter" msprop:Generator_ColumnPropNameInTable="AccountCostCenterColumn" msprop:Generator_UserColumnName="AccountCostCenter">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="AccountCostCenterCode" msprop:Generator_ColumnVarNameInTable="columnAccountCostCenterCode" msprop:Generator_ColumnPropNameInRow="AccountCostCenterCode" msprop:Generator_ColumnPropNameInTable="AccountCostCenterCodeColumn" msprop:Generator_UserColumnName="AccountCostCenterCode">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="14" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:EmployeeFilter" />
      <xs:field xpath="mstns:AccountEmployeeId" />
    </xs:unique>
    <xs:unique name="DepartmentFilter_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:DepartmentFilter" />
      <xs:field xpath="mstns:AccountDepartmentId" />
    </xs:unique>
    <xs:unique name="ProjectFilter_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ProjectFilter" />
      <xs:field xpath="mstns:AccountProjectId" />
    </xs:unique>
    <xs:unique name="LocationFilter_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:LocationFilter" />
      <xs:field xpath="mstns:AccountLocationId" />
    </xs:unique>
    <xs:unique name="ClientFilter_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ClientFilter" />
      <xs:field xpath="mstns:AccountPartyId" />
    </xs:unique>
    <xs:unique name="ProjectTaskFilter_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ProjectTaskFilter" />
      <xs:field xpath="mstns:AccountProjectTaskId" />
    </xs:unique>
    <xs:unique name="ExpenseTypeFilter_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ExpenseTypeFilter" />
      <xs:field xpath="mstns:AccountExpenseTypeId" />
    </xs:unique>
    <xs:unique name="ExpenseFilter_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ExpenseFilter" />
      <xs:field xpath="mstns:AccountExpenseId" />
    </xs:unique>
    <xs:unique name="RoleFilter_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:RoleFilter" />
      <xs:field xpath="mstns:AccountRoleId" />
    </xs:unique>
    <xs:unique name="StatusFilter_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:StatusFilter" />
      <xs:field xpath="mstns:AccountStatusId" />
    </xs:unique>
    <xs:unique name="CurrencyFilter_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:CurrencyFilter" />
      <xs:field xpath="mstns:AccountCurrencyId" />
    </xs:unique>
    <xs:unique name="TaskTypeFilter_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TaskTypeFilter" />
      <xs:field xpath="mstns:AccountTaskTypeId" />
    </xs:unique>
    <xs:unique name="PriorityFilter_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:PriorityFilter" />
      <xs:field xpath="mstns:AccountPriorityId" />
    </xs:unique>
    <xs:unique name="ProjectTypeFilter_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ProjectTypeFilter" />
      <xs:field xpath="mstns:AccountProjectTypeId" />
    </xs:unique>
    <xs:unique name="TimeOffTypeFilter_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TimeOffTypeFilter" />
      <xs:field xpath="mstns:AccountTimeOffTypeId" />
    </xs:unique>
    <xs:unique name="TimeOffPolicyFilter_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TimeOffPolicyFilter" />
      <xs:field xpath="mstns:AccountTimeOffPolicyId" />
    </xs:unique>
    <xs:unique name="WorkTypeFilter_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:WorkTypeFilter" />
      <xs:field xpath="mstns:AccountWorkTypeId" />
    </xs:unique>
    <xs:unique name="CostCenterFilter_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:CostCenterFilter" />
      <xs:field xpath="mstns:AccountCostCenterId" />
    </xs:unique>
  </xs:element>
</xs:schema>