<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="dsTaskSummaryReport" targetNamespace="http://tempuri.org/dsTaskSummaryReport.xsd" xmlns:mstns="http://tempuri.org/dsTaskSummaryReport.xsd" xmlns="http://tempuri.org/dsTaskSummaryReport.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Web.config" AppSettingsPropertyName="LiveConnectionString" ConnectionStringObject="" IsAppSettingsProperty="True" Modifier="Assembly" Name="LiveConnectionString (Web.config)" ParameterPrefix="@" PropertyReference="AppConfig.System.Configuration.ConfigurationManager.0.ConnectionStrings.LiveConnectionString.ConnectionString" Provider="System.Data.SqlClient">
          </Connection>
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="vueAccountEmployeeTimeEntryTableAdapter" Name="vueAccountEmployeeTimeEntry">
            <MainSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="TimeLive.dbo.vueAccountProjectTask" DbObjectType="View" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="False" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="False">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="True">
                    <CommandText>SELECT     ProjectName, TaskStatus, TaskType, 0 as TotalTaskStatus
FROM         vueAccountProjectTask
</CommandText>
                    <Parameters>
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ProjectName" DataSetColumn="ProjectName" />
              <Mapping SourceColumn="TaskStatus" DataSetColumn="TaskStatus" />
              <Mapping SourceColumn="TaskType" DataSetColumn="TaskType" />
              <Mapping SourceColumn="TotalTaskStatus" DataSetColumn="TotalTaskStatus" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="TimeLive.dbo.vueAccountProjectTask" DbObjectType="View" FillMethodModifier="Public" FillMethodName="FillForTaskSummaryReport" GenerateMethods="Both" GenerateShortCommands="True" GetMethodModifier="Public" GetMethodName="GetDataForTaskSummaryReport" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="True">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="True">
                    <CommandText>SELECT     ProjectName, TaskType, TaskStatus, COUNT(TaskStatus) AS TotalTaskStatus
FROM         vueAccountProjectTask
WHERE     (AccountId = @AccountId) AND (@AccountProjectId = 0 OR
                      AccountProjectId = @AccountProjectId) AND (@AccountTaskTypeId = 0 OR
                      AccountTaskTypeId = @AccountTaskTypeId)
GROUP BY ProjectName, TaskType, TaskStatus</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="True" AutogeneratedName="AccountId" ColumnName="AccountId" DataSourceName="TimeLive.dbo.vueAccountProjectTask" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountId" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="AccountProjectId" ColumnName="AccountProjectId" DataSourceName="TimeLive.dbo.vueAccountProjectTask" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountProjectId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountProjectId" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="AccountTaskTypeId" ColumnName="AccountTaskTypeId" DataSourceName="TimeLive.dbo.vueAccountProjectTask" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountTaskTypeId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountTaskTypeId" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources>
        </Sources>
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="dsTaskSummaryReport" msdata:IsDataSet="true" msdata:UseCurrentLocale="true">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="vueAccountEmployeeTimeEntry">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ProjectName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="TaskStatus" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="TaskType" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="TotalTaskStatus" msdata:ReadOnly="true" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
  </xs:element>
</xs:schema>