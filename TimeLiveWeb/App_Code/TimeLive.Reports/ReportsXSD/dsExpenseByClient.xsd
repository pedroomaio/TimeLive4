<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="dsExpenseByClient" targetNamespace="http://tempuri.org/dsExpenseByClient.xsd" xmlns:mstns="http://tempuri.org/dsExpenseByClient.xsd" xmlns="http://tempuri.org/dsExpenseByClient.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Web.config" AppSettingsPropertyName="LiveConnectionString" ConnectionStringObject="" IsAppSettingsProperty="True" Modifier="Assembly" Name="LiveConnectionString (Web.config)" ParameterPrefix="@" PropertyReference="AppConfig.System.Configuration.ConfigurationManager.0.ConnectionStrings.LiveConnectionString.ConnectionString" Provider="System.Data.SqlClient">
          </Connection>
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="vueAccountExpenseEntryAdapter" Name="vueAccountExpenseEntry">
            <MainSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="TimeLive.dbo.vueAccountExpenseEntry" DbObjectType="View" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="False" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="False">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="True">
                    <CommandText>select EmployeeName, AccountExpenseName, ProjectName, PartyName, AccountCurrencyId, ExchangeRate, CurrencyCode, Amount, ExpenseType
FROM         vueAccountExpenseEntry
</CommandText>
                    <Parameters>
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="EmployeeName" DataSetColumn="EmployeeName" />
              <Mapping SourceColumn="AccountExpenseName" DataSetColumn="AccountExpenseName" />
              <Mapping SourceColumn="ProjectName" DataSetColumn="ProjectName" />
              <Mapping SourceColumn="PartyName" DataSetColumn="PartyName" />
              <Mapping SourceColumn="AccountCurrencyId" DataSetColumn="AccountCurrencyId" />
              <Mapping SourceColumn="ExchangeRate" DataSetColumn="ExchangeRate" />
              <Mapping SourceColumn="CurrencyCode" DataSetColumn="CurrencyCode" />
              <Mapping SourceColumn="Amount" DataSetColumn="Amount" />
              <Mapping SourceColumn="ExpenseType" DataSetColumn="ExpenseType" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="TimeLive.dbo.vueAccountExpenseEntry" DbObjectType="View" FillMethodModifier="Public" FillMethodName="FillByAccountExpenseId" GenerateMethods="Both" GenerateShortCommands="True" GetMethodModifier="Public" GetMethodName="GetDataByAccountExpenseId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="True">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="True">
                    <CommandText>select EmployeeName, AccountExpenseName, ProjectName, PartyName, AccountCurrencyId, ExchangeRate, CurrencyCode, Amount, ExpenseType
FROM         vueAccountExpenseEntry where (accountexpenseid = @accountexpenseid)
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="False" AutogeneratedName="accountexpenseid" ColumnName="AccountExpenseId" DataSourceName="TimeLive.dbo.vueAccountExpenseEntry" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@accountexpenseid" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountExpenseId" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="TimeLive.dbo.vueAccountExpenseEntry" DbObjectType="View" FillMethodModifier="Public" FillMethodName="FillByAccountId" GenerateMethods="Both" GenerateShortCommands="True" GetMethodModifier="Public" GetMethodName="GetDataByAccountId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="True">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="True">
                    <CommandText>SELECT AccountCurrencyId, AccountExpenseName, Amount, CurrencyCode, EmployeeName, ExchangeRate, ExpenseType, PartyName, ProjectName FROM vueAccountExpenseEntry WHERE (AccountId = @AccountId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="False" AutogeneratedName="AccountId" ColumnName="AccountId" DataSourceName="TimeLive.dbo.vueAccountExpenseEntry" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountId" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources>
        </Sources>
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="dsExpenseByClient" msdata:IsDataSet="true" msdata:UseCurrentLocale="true">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="vueAccountExpenseEntry">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="EmployeeName" msdata:ReadOnly="true" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="301" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="AccountExpenseName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="200" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ProjectName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="PartyName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="400" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="AccountCurrencyId" type="xs:int" minOccurs="0" />
              <xs:element name="ExchangeRate" type="xs:double" minOccurs="0" />
              <xs:element name="CurrencyCode" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Amount" type="xs:double" />
              <xs:element name="ExpenseType" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
  </xs:element>
</xs:schema>