<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="AccountCurrency" targetNamespace="http://tempuri.org/AccountCurrency.xsd" xmlns:mstns="http://tempuri.org/AccountCurrency.xsd" xmlns="http://tempuri.org/AccountCurrency.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Web.config" AppSettingsPropertyName="LiveConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="LiveConnectionString (Web.config)" ParameterPrefix="@" PropertyReference="AppConfig.System.Configuration.ConfigurationManager.0.ConnectionStrings.LiveConnectionString.ConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="AccountCurrencyTableAdapter" GeneratorDataComponentClassName="AccountCurrencyTableAdapter" Name="AccountCurrency" UserDataComponentName="AccountCurrencyTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="[TimeLive2.7].dbo.AccountCurrency" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [AccountCurrency] WHERE (([AccountCurrencyId] = @Original_AccountCurrencyId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AccountCurrencyId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountCurrencyId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [AccountCurrency] ([AccountCurrencyExchangeRateId], [SystemCurrencyId], [AccountId], [Disabled], [MasterAccountCurrencyId]) VALUES (@AccountCurrencyExchangeRateId, @SystemCurrencyId, @AccountId, @Disabled, @MasterAccountCurrencyId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@AccountCurrencyExchangeRateId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountCurrencyExchangeRateId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SystemCurrencyId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SystemCurrencyId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@AccountId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Disabled" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="Disabled" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@MasterAccountCurrencyId" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="MasterAccountCurrencyId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT     AccountCurrencyId, AccountCurrencyExchangeRateId, SystemCurrencyId, AccountId, Disabled, MasterAccountCurrencyId
FROM         AccountCurrency</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [AccountCurrency] SET [AccountCurrencyExchangeRateId] = @AccountCurrencyExchangeRateId, [SystemCurrencyId] = @SystemCurrencyId, [AccountId] = @AccountId, [Disabled] = @Disabled, [MasterAccountCurrencyId] = @MasterAccountCurrencyId WHERE (([AccountCurrencyId] = @Original_AccountCurrencyId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@AccountCurrencyExchangeRateId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountCurrencyExchangeRateId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SystemCurrencyId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SystemCurrencyId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@AccountId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Disabled" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="Disabled" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@MasterAccountCurrencyId" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="MasterAccountCurrencyId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AccountCurrencyId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountCurrencyId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="AccountCurrencyId" DataSetColumn="AccountCurrencyId" />
              <Mapping SourceColumn="AccountCurrencyExchangeRateId" DataSetColumn="AccountCurrencyExchangeRateId" />
              <Mapping SourceColumn="SystemCurrencyId" DataSetColumn="SystemCurrencyId" />
              <Mapping SourceColumn="AccountId" DataSetColumn="AccountId" />
              <Mapping SourceColumn="Disabled" DataSetColumn="Disabled" />
              <Mapping SourceColumn="MasterAccountCurrencyId" DataSetColumn="MasterAccountCurrencyId" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="Timelive2.dbo.AccountCurrency" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetBySystemCurrencyIdAndAccountId" GetMethodModifier="Public" GetMethodName="GetBySystemCurrencyIdAndAccountId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetBySystemCurrencyIdAndAccountId" UserSourceName="GetBySystemCurrencyIdAndAccountId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT AccountCurrencyExchangeRateId, AccountCurrencyId, AccountId, Disabled, MasterAccountCurrencyId, SystemCurrencyId FROM AccountCurrency WHERE (SystemCurrencyId = @SystemCurrencyId) AND (AccountId = @AccountId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="SystemCurrencyId" ColumnName="SystemCurrencyId" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@SystemCurrencyId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="SystemCurrencyId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="AccountId" ColumnName="AccountId" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="Timelive2.dbo.AccountCurrency" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetCurrencyExisting_AccountCurrencyId" GetMethodModifier="Public" GetMethodName="GetCurrencyExisting_AccountCurrencyId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetCurrencyExisting_AccountCurrencyId" UserSourceName="GetCurrencyExisting_AccountCurrencyId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT AccountCurrencyExchangeRateId, AccountCurrencyId, AccountId, Disabled, MasterAccountCurrencyId, SystemCurrencyId FROM AccountCurrency WHERE (SystemCurrencyId = @SystemCurrencyId) AND (AccountCurrencyId &lt;&gt; @ExistingAccountCurrencyId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="SystemCurrencyId" ColumnName="SystemCurrencyId" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@SystemCurrencyId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="SystemCurrencyId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ExistingAccountCurrencyId" ColumnName="AccountCurrencyId" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ExistingAccountCurrencyId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountCurrencyId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="Timelive2.dbo.AccountCurrency" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByAccountCurrencyId" GetMethodModifier="Public" GetMethodName="GetDataByAccountCurrencyId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByAccountCurrencyId" UserSourceName="GetDataByAccountCurrencyId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT AccountCurrencyExchangeRateId, AccountCurrencyId, AccountId, Disabled, MasterAccountCurrencyId, SystemCurrencyId FROM AccountCurrency WHERE (AccountCurrencyId = @AccountCurrencyId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="AccountCurrencyId" ColumnName="AccountCurrencyId" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountCurrencyId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountCurrencyId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="Timelive2.dbo.AccountCurrency" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByAccountId" GetMethodModifier="Public" GetMethodName="GetDataByAccountId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByAccountId" UserSourceName="GetDataByAccountId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT AccountCurrencyExchangeRateId, AccountCurrencyId, AccountId, Disabled, MasterAccountCurrencyId, SystemCurrencyId FROM AccountCurrency WHERE (AccountId = @AccountId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="AccountId" ColumnName="AccountId" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="TimeLive2913.dbo.AccountCurrency" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataBySystemCurrencyId" GetMethodModifier="Public" GetMethodName="GetDataBySystemCurrencyId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBySystemCurrencyId" UserSourceName="GetDataBySystemCurrencyId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     AccountCurrencyId, AccountCurrencyExchangeRateId, SystemCurrencyId, AccountId, Disabled, MasterAccountCurrencyId
FROM         AccountCurrency
Where SystemCurrencyId = @SystemCurrencyId And AccountId = @AccountId</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="SystemCurrencyId" ColumnName="SystemCurrencyId" DataSourceName="TimeLive2913.dbo.AccountCurrency" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@SystemCurrencyId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="SystemCurrencyId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="AccountId" ColumnName="AccountId" DataSourceName="TimeLive2913.dbo.AccountCurrency" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertDefault" Modifier="Public" Name="InsertDefault" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="InsertDefault">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>If Not Exists (Select SystemCurrencyId, AccountId, Disabled, MasterAccountCurrencyId
From AccountCurrency Where AccountId = @AccountId)
BEGIN
INSERT INTO AccountCurrency
                      (SystemCurrencyId, AccountId, Disabled, MasterAccountCurrencyId)
SELECT  SystemCurrencyId, @AccountId, 0, MasterAccountCurrencyId
FROM         dbo.MasterAccountCurrency
END</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@AccountId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateAccountCurrencyExchangeRateId" Modifier="Public" Name="UpdateAccountCurrencyExchangeRateId" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="UpdateAccountCurrencyExchangeRateId">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE    AccountCurrency
SET              AccountCurrencyExchangeRateId = @AccountCurrencyExchangeRateId
WHERE     (AccountCurrencyId = @AccountCurrencyId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="AccountCurrencyExchangeRateId" ColumnName="AccountCurrencyExchangeRateId" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountCurrencyExchangeRateId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountCurrencyExchangeRateId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="AccountCurrencyId" ColumnName="AccountCurrencyId" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountCurrencyId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountCurrencyId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateDefault" Modifier="Public" Name="UpdateDefault" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="UpdateDefault">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE    dbo.AccountCurrency
SET              dbo.AccountCurrency.AccountCurrencyExchangeRateId = dbo.AccountCurrencyExchangeRate.AccountCurrencyExchangeRateId
FROM         dbo.AccountCurrency INNER JOIN
                      dbo.MasterAccountCurrency ON dbo.AccountCurrency.MasterAccountCurrencyId = dbo.MasterAccountCurrency.MasterAccountCurrencyId AND 
                      dbo.AccountCurrency.SystemCurrencyId = dbo.MasterAccountCurrency.SystemCurrencyId INNER JOIN
                      dbo.MasterAccountCurrencyExchangeRate ON 
                      dbo.MasterAccountCurrency.MasterAccountCurrencyExchangeRateId = dbo.MasterAccountCurrencyExchangeRate.MasterAccountCurrencyExchangeRateId
                       AND dbo.MasterAccountCurrency.MasterAccountCurrencyId = dbo.MasterAccountCurrencyExchangeRate.MasterAccountCurrencyId INNER JOIN
                      dbo.AccountCurrencyExchangeRate ON dbo.AccountCurrency.AccountCurrencyId = dbo.AccountCurrencyExchangeRate.AccountCurrencyId
WHERE     (dbo.AccountCurrency.AccountId = @AccountId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="AccountId" ColumnName="AccountId" DataSourceName="TLHosted.dbo.AccountCurrency" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="vueAccountCurrencyTableAdapter" GeneratorDataComponentClassName="vueAccountCurrencyTableAdapter" Name="vueAccountCurrency" UserDataComponentName="vueAccountCurrencyTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="Hosted030309.dbo.vueAccountCurrency" DbObjectType="View" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT CurrencyCode, Currency, Disabled, AccountId, AccountCurrencyId, AccountCurrencyExchangeRateId, ExchangeRate, ExchangeRateEffectiveStartDate, ExchangeRateEffectiveEndDate FROM vueAccountCurrency</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="CurrencyCode" DataSetColumn="CurrencyCode" />
              <Mapping SourceColumn="Currency" DataSetColumn="Currency" />
              <Mapping SourceColumn="Disabled" DataSetColumn="Disabled" />
              <Mapping SourceColumn="AccountId" DataSetColumn="AccountId" />
              <Mapping SourceColumn="AccountCurrencyId" DataSetColumn="AccountCurrencyId" />
              <Mapping SourceColumn="AccountCurrencyExchangeRateId" DataSetColumn="AccountCurrencyExchangeRateId" />
              <Mapping SourceColumn="ExchangeRate" DataSetColumn="ExchangeRate" />
              <Mapping SourceColumn="ExchangeRateEffectiveStartDate" DataSetColumn="ExchangeRateEffectiveStartDate" />
              <Mapping SourceColumn="ExchangeRateEffectiveEndDate" DataSetColumn="ExchangeRateEffectiveEndDate" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="Hosted030309.dbo.vueAccountCurrency" DbObjectType="View" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByAccountCurrencyId" GetMethodModifier="Public" GetMethodName="GetDataByAccountCurrencyId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByAccountCurrencyId" UserSourceName="GetDataByAccountCurrencyId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT AccountCurrencyExchangeRateId, AccountCurrencyId, AccountId, Currency, CurrencyCode, Disabled, ExchangeRate, ExchangeRateEffectiveEndDate, ExchangeRateEffectiveStartDate FROM vueAccountCurrency WHERE (AccountCurrencyId = @AccountCurrencyId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="AccountCurrencyId" ColumnName="AccountCurrencyId" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountCurrencyId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountCurrencyId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="Hosted030309.dbo.vueAccountCurrency" DbObjectType="View" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByAccountId" GetMethodModifier="Public" GetMethodName="GetDataByAccountId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByAccountId" UserSourceName="GetDataByAccountId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT AccountCurrencyExchangeRateId, AccountCurrencyId, AccountId, Currency, CurrencyCode, Disabled, ExchangeRate, ExchangeRateEffectiveEndDate, ExchangeRateEffectiveStartDate FROM vueAccountCurrency WHERE (AccountId = @AccountId) ORDER BY Currency, ExchangeRate</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="AccountId" ColumnName="AccountId" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="Hosted030309.dbo.vueAccountCurrency" DbObjectType="View" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByAccountIdAndDisabled" GetMethodModifier="Public" GetMethodName="GetDataByAccountIdAndDisabled" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByAccountIdAndDisabled" UserSourceName="GetDataByAccountIdAndDisabled">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT AccountCurrencyExchangeRateId, AccountCurrencyId, AccountId, Currency, CurrencyCode, Disabled, ExchangeRate, ExchangeRateEffectiveEndDate, ExchangeRateEffectiveStartDate, CurrencyCode + ' - ' + Currency As CurrencyWithCode FROM vueAccountCurrency WHERE (AccountId = @AccountId) AND (Disabled &lt;&gt; 1) OR (AccountId = @AccountId) AND (AccountCurrencyId = @AccountCurrencyId) ORDER BY CurrencyCode, Currency</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="AccountId" ColumnName="AccountId" DataSourceName="Hosted030309.dbo.vueAccountCurrency" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="AccountCurrencyId" ColumnName="AccountCurrencyId" DataSourceName="Hosted030309.dbo.vueAccountCurrency" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountCurrencyId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountCurrencyId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="TimeLive.dbo.vueAccountCurrency" DbObjectType="View" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByAccountIdforBaseCurrency" GetMethodModifier="Public" GetMethodName="GetDataByAccountIdforBaseCurrency" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByAccountIdforBaseCurrency" UserSourceName="GetDataByAccountIdforBaseCurrency">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     CurrencyCode, Currency, AccountId, AccountCurrencyId, ExchangeRate, AccountCurrencyExchangeRateId, ExchangeRateEffectiveStartDate, 
                      ExchangeRateEffectiveEndDate, Disabled
FROM         vueAccountCurrency
WHERE     (AccountId = @AccountId) AND (Disabled &lt;&gt; 1)
ORDER BY Currency, ExchangeRate</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="AccountId" ColumnName="AccountId" DataSourceName="TimeLive.dbo.vueAccountCurrency" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="AccountCurrency" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_DataSetName="AccountCurrency" msprop:Generator_UserDSName="AccountCurrency">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="AccountCurrency" msprop:Generator_TableClassName="AccountCurrencyDataTable" msprop:Generator_TableVarName="tableAccountCurrency" msprop:Generator_TablePropName="_AccountCurrency" msprop:Generator_RowDeletingName="AccountCurrencyRowDeleting" msprop:Generator_UserTableName="AccountCurrency" msprop:Generator_RowChangingName="AccountCurrencyRowChanging" msprop:Generator_RowEvHandlerName="AccountCurrencyRowChangeEventHandler" msprop:Generator_RowDeletedName="AccountCurrencyRowDeleted" msprop:Generator_RowEvArgName="AccountCurrencyRowChangeEvent" msprop:Generator_RowChangedName="AccountCurrencyRowChanged" msprop:Generator_RowClassName="AccountCurrencyRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="AccountCurrencyId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msprop:Generator_ColumnVarNameInTable="columnAccountCurrencyId" msprop:Generator_ColumnPropNameInRow="AccountCurrencyId" msprop:Generator_ColumnPropNameInTable="AccountCurrencyIdColumn" msprop:Generator_UserColumnName="AccountCurrencyId" type="xs:int" />
              <xs:element name="AccountCurrencyExchangeRateId" msprop:Generator_ColumnVarNameInTable="columnAccountCurrencyExchangeRateId" msprop:Generator_ColumnPropNameInRow="AccountCurrencyExchangeRateId" msprop:Generator_ColumnPropNameInTable="AccountCurrencyExchangeRateIdColumn" msprop:Generator_UserColumnName="AccountCurrencyExchangeRateId" type="xs:int" minOccurs="0" />
              <xs:element name="SystemCurrencyId" msprop:Generator_ColumnVarNameInTable="columnSystemCurrencyId" msprop:Generator_ColumnPropNameInRow="SystemCurrencyId" msprop:Generator_ColumnPropNameInTable="SystemCurrencyIdColumn" msprop:Generator_UserColumnName="SystemCurrencyId" type="xs:int" />
              <xs:element name="AccountId" msprop:Generator_ColumnVarNameInTable="columnAccountId" msprop:Generator_ColumnPropNameInRow="AccountId" msprop:Generator_ColumnPropNameInTable="AccountIdColumn" msprop:Generator_UserColumnName="AccountId" type="xs:int" />
              <xs:element name="Disabled" msprop:Generator_ColumnVarNameInTable="columnDisabled" msprop:Generator_ColumnPropNameInRow="Disabled" msprop:Generator_ColumnPropNameInTable="DisabledColumn" msprop:Generator_UserColumnName="Disabled" type="xs:boolean" />
              <xs:element name="MasterAccountCurrencyId" msprop:Generator_ColumnVarNameInTable="columnMasterAccountCurrencyId" msprop:Generator_ColumnPropNameInRow="MasterAccountCurrencyId" msprop:Generator_ColumnPropNameInTable="MasterAccountCurrencyIdColumn" msprop:Generator_UserColumnName="MasterAccountCurrencyId" type="xs:short" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="vueAccountCurrency" msprop:Generator_TableClassName="vueAccountCurrencyDataTable" msprop:Generator_TableVarName="tablevueAccountCurrency" msprop:Generator_TablePropName="vueAccountCurrency" msprop:Generator_RowDeletingName="vueAccountCurrencyRowDeleting" msprop:Generator_UserTableName="vueAccountCurrency" msprop:Generator_RowChangingName="vueAccountCurrencyRowChanging" msprop:Generator_RowEvHandlerName="vueAccountCurrencyRowChangeEventHandler" msprop:Generator_RowDeletedName="vueAccountCurrencyRowDeleted" msprop:Generator_RowEvArgName="vueAccountCurrencyRowChangeEvent" msprop:Generator_RowChangedName="vueAccountCurrencyRowChanged" msprop:Generator_RowClassName="vueAccountCurrencyRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="CurrencyCode" msprop:Generator_ColumnVarNameInTable="columnCurrencyCode" msprop:Generator_ColumnPropNameInRow="CurrencyCode" msprop:Generator_ColumnPropNameInTable="CurrencyCodeColumn" msprop:Generator_UserColumnName="CurrencyCode" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="15" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Currency" msprop:Generator_ColumnVarNameInTable="columnCurrency" msprop:Generator_ColumnPropNameInRow="Currency" msprop:Generator_ColumnPropNameInTable="CurrencyColumn" msprop:Generator_UserColumnName="Currency" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Disabled" msprop:Generator_ColumnVarNameInTable="columnDisabled" msprop:Generator_ColumnPropNameInRow="Disabled" msprop:Generator_ColumnPropNameInTable="DisabledColumn" msprop:Generator_UserColumnName="Disabled" type="xs:boolean" />
              <xs:element name="AccountId" msprop:Generator_ColumnVarNameInTable="columnAccountId" msprop:Generator_ColumnPropNameInRow="AccountId" msprop:Generator_ColumnPropNameInTable="AccountIdColumn" msprop:Generator_UserColumnName="AccountId" type="xs:int" />
              <xs:element name="AccountCurrencyId" msprop:Generator_ColumnVarNameInTable="columnAccountCurrencyId" msprop:Generator_ColumnPropNameInRow="AccountCurrencyId" msprop:Generator_ColumnPropNameInTable="AccountCurrencyIdColumn" msprop:Generator_UserColumnName="AccountCurrencyId" type="xs:int" />
              <xs:element name="AccountCurrencyExchangeRateId" msprop:Generator_ColumnVarNameInTable="columnAccountCurrencyExchangeRateId" msprop:Generator_ColumnPropNameInRow="AccountCurrencyExchangeRateId" msprop:Generator_ColumnPropNameInTable="AccountCurrencyExchangeRateIdColumn" msprop:Generator_UserColumnName="AccountCurrencyExchangeRateId" type="xs:int" />
              <xs:element name="ExchangeRate" msprop:Generator_ColumnVarNameInTable="columnExchangeRate" msprop:Generator_ColumnPropNameInRow="ExchangeRate" msprop:Generator_ColumnPropNameInTable="ExchangeRateColumn" msprop:Generator_UserColumnName="ExchangeRate" type="xs:double" minOccurs="0" />
              <xs:element name="ExchangeRateEffectiveStartDate" msprop:Generator_ColumnVarNameInTable="columnExchangeRateEffectiveStartDate" msprop:Generator_ColumnPropNameInRow="ExchangeRateEffectiveStartDate" msprop:Generator_ColumnPropNameInTable="ExchangeRateEffectiveStartDateColumn" msprop:Generator_UserColumnName="ExchangeRateEffectiveStartDate" type="xs:dateTime" minOccurs="0" />
              <xs:element name="ExchangeRateEffectiveEndDate" msprop:Generator_ColumnVarNameInTable="columnExchangeRateEffectiveEndDate" msprop:Generator_ColumnPropNameInRow="ExchangeRateEffectiveEndDate" msprop:Generator_ColumnPropNameInTable="ExchangeRateEffectiveEndDateColumn" msprop:Generator_UserColumnName="ExchangeRateEffectiveEndDate" type="xs:dateTime" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:AccountCurrency" />
      <xs:field xpath="mstns:AccountCurrencyId" />
    </xs:unique>
  </xs:element>
</xs:schema>