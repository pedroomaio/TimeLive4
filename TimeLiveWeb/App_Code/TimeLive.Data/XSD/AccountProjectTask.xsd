<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="AccountProjectTask" targetNamespace="http://tempuri.org/AccountProjectTask.xsd" xmlns:mstns="http://tempuri.org/AccountProjectTask.xsd" xmlns="http://tempuri.org/AccountProjectTask.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Web.config" AppSettingsPropertyName="LiveConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="LiveConnectionString (Web.config)" ParameterPrefix="@" PropertyReference="AppConfig.System.Configuration.ConfigurationManager.0.ConnectionStrings.LiveConnectionString.ConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="vueAccountProjectTaskForQBTableAdapter" GeneratorDataComponentClassName="vueAccountProjectTaskForQBTableAdapter" Name="vueAccountProjectTaskForQB" UserDataComponentName="vueAccountProjectTaskForQBTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="TLLocal.dbo.vueAccountProjectTaskForQB" DbObjectType="View" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     TaskName, TaskCode, ProjectCode, ItemParent, JobParent, JobItemParent
FROM         vueAccountProjectTaskForQB</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TaskName" DataSetColumn="TaskName" />
              <Mapping SourceColumn="TaskCode" DataSetColumn="TaskCode" />
              <Mapping SourceColumn="ProjectCode" DataSetColumn="ProjectCode" />
              <Mapping SourceColumn="ItemParent" DataSetColumn="ItemParent" />
              <Mapping SourceColumn="JobParent" DataSetColumn="JobParent" />
              <Mapping SourceColumn="JobItemParent" DataSetColumn="JobItemParent" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="TLH11JUN11.dbo.vueAccountProjectTaskForQB" DbObjectType="View" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetTasksByAccountId" GetMethodModifier="Public" GetMethodName="GetTasksByAccountId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetTasksByAccountId" UserSourceName="GetTasksByAccountId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT ItemParent, JobItemParent, JobParent, ProjectCode, TaskCode, TaskName FROM vueAccountProjectTaskForQB WHERE (AccountId = @AccountId) AND (IsTemplate &lt;&gt; 1) ORDER BY JobItemParent</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="AccountId" ColumnName="AccountId" DataSourceName="TLH11JUN11.dbo.vueAccountProjectTaskForQB" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="vueAccountProjectTaskForGraphTableAdapterForGraph" GeneratorDataComponentClassName="vueAccountProjectTaskForGraphTableAdapterForGraph" Name="vueAccountProjectTaskForGraph" UserDataComponentName="vueAccountProjectTaskForGraphTableAdapterForGraph">
            <MainSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="TimeLive.dbo.vueAccountProjectTask" DbObjectType="View" GenerateMethods="Get" GenerateShortCommands="false" GeneratorGetMethodName="GetDataByAccountId" GetMethodModifier="Public" GetMethodName="GetDataByAccountId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetDataByAccountId" UserSourceName="GetDataByAccountId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     TaskStatus, COUNT(TaskStatus) AS StatusCount, AccountId
FROM         vueAccountProjectTask
WHERE     (AccountProjectTaskId IN
                          (SELECT     AccountProjectTaskId
                            FROM          AccountProjectTaskEmployee
                            WHERE      (AccountEmployeeId = @AccountEmployeeId))) AND (Completed &lt;&gt; 1) AND (IsParentTask &lt;&gt; 1) AND (IsForAllEmployees &lt;&gt; 1) AND (IsDisabled &lt;&gt; 1) AND 
                      (IsTemplate &lt;&gt; 1) AND (ISNULL(IsDeletedClient, 0) = 0)
GROUP BY TaskStatus, AccountId</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="AccountEmployeeId" ColumnName="AccountEmployeeId" DataSourceName="TimeLive.dbo.vueAccountProjectTask" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountEmployeeId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountEmployeeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TaskStatus" DataSetColumn="TaskStatus" />
              <Mapping SourceColumn="StatusCount" DataSetColumn="StatusCount" />
              <Mapping SourceColumn="AccountId" DataSetColumn="AccountId" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="AccountProjectTask" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_DataSetName="AccountProjectTask" msprop:Generator_UserDSName="AccountProjectTask">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="vueAccountProjectTaskForQB" msprop:Generator_TableClassName="vueAccountProjectTaskForQBDataTable" msprop:Generator_TableVarName="tablevueAccountProjectTaskForQB" msprop:Generator_TablePropName="vueAccountProjectTaskForQB" msprop:Generator_RowDeletingName="vueAccountProjectTaskForQBRowDeleting" msprop:Generator_UserTableName="vueAccountProjectTaskForQB" msprop:Generator_RowChangingName="vueAccountProjectTaskForQBRowChanging" msprop:Generator_RowEvHandlerName="vueAccountProjectTaskForQBRowChangeEventHandler" msprop:Generator_RowDeletedName="vueAccountProjectTaskForQBRowDeleted" msprop:Generator_RowEvArgName="vueAccountProjectTaskForQBRowChangeEvent" msprop:Generator_RowChangedName="vueAccountProjectTaskForQBRowChanged" msprop:Generator_RowClassName="vueAccountProjectTaskForQBRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TaskName" msprop:Generator_ColumnVarNameInTable="columnTaskName" msprop:Generator_ColumnPropNameInRow="TaskName" msprop:Generator_ColumnPropNameInTable="TaskNameColumn" msprop:Generator_UserColumnName="TaskName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="200" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="TaskCode" msprop:Generator_ColumnVarNameInTable="columnTaskCode" msprop:Generator_ColumnPropNameInRow="TaskCode" msprop:Generator_ColumnPropNameInTable="TaskCodeColumn" msprop:Generator_UserColumnName="TaskCode" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ProjectCode" msprop:Generator_ColumnVarNameInTable="columnProjectCode" msprop:Generator_ColumnPropNameInRow="ProjectCode" msprop:Generator_ColumnPropNameInTable="ProjectCodeColumn" msprop:Generator_UserColumnName="ProjectCode">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ItemParent" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnItemParent" msprop:Generator_ColumnPropNameInRow="ItemParent" msprop:Generator_ColumnPropNameInTable="ItemParentColumn" msprop:Generator_UserColumnName="ItemParent" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="JobParent" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnJobParent" msprop:Generator_ColumnPropNameInRow="JobParent" msprop:Generator_ColumnPropNameInTable="JobParentColumn" msprop:Generator_UserColumnName="JobParent" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="JobItemParent" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnJobItemParent" msprop:Generator_ColumnPropNameInRow="JobItemParent" msprop:Generator_ColumnPropNameInTable="JobItemParentColumn" msprop:Generator_UserColumnName="JobItemParent" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="vueAccountProjectTaskForGraph" msprop:Generator_TableClassName="vueAccountProjectTaskForGraphDataTable" msprop:Generator_TableVarName="tablevueAccountProjectTaskForGraph" msprop:Generator_TablePropName="vueAccountProjectTaskForGraph" msprop:Generator_RowDeletingName="vueAccountProjectTaskForGraphRowDeleting" msprop:Generator_UserTableName="vueAccountProjectTaskForGraph" msprop:Generator_RowChangingName="vueAccountProjectTaskForGraphRowChanging" msprop:Generator_RowEvHandlerName="vueAccountProjectTaskForGraphRowChangeEventHandler" msprop:Generator_RowDeletedName="vueAccountProjectTaskForGraphRowDeleted" msprop:Generator_RowEvArgName="vueAccountProjectTaskForGraphRowChangeEvent" msprop:Generator_RowChangedName="vueAccountProjectTaskForGraphRowChanged" msprop:Generator_RowClassName="vueAccountProjectTaskForGraphRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TaskStatus" msprop:Generator_ColumnVarNameInTable="columnTaskStatus" msprop:Generator_ColumnPropNameInRow="TaskStatus" msprop:Generator_ColumnPropNameInTable="TaskStatusColumn" msprop:Generator_UserColumnName="TaskStatus" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="90" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="StatusCount" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnStatusCount" msprop:Generator_ColumnPropNameInRow="StatusCount" msprop:Generator_ColumnPropNameInTable="StatusCountColumn" msprop:Generator_UserColumnName="StatusCount" type="xs:int" minOccurs="0" />
              <xs:element name="AccountId" msprop:Generator_ColumnVarNameInTable="columnAccountId" msprop:Generator_ColumnPropNameInRow="AccountId" msprop:Generator_ColumnPropNameInTable="AccountIdColumn" msprop:Generator_UserColumnName="AccountId" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
  </xs:element>
</xs:schema>