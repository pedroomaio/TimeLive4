<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="AccountCurrencyExchangeRate" targetNamespace="http://tempuri.org/AccountCurrencyExchangeRate.xsd" xmlns:mstns="http://tempuri.org/AccountCurrencyExchangeRate.xsd" xmlns="http://tempuri.org/AccountCurrencyExchangeRate.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Web.config" AppSettingsPropertyName="LiveConnectionString" ConnectionStringObject="" IsAppSettingsProperty="True" Modifier="Assembly" Name="LiveConnectionString (Web.config)" ParameterPrefix="@" PropertyReference="AppConfig.System.Configuration.ConfigurationManager.0.ConnectionStrings.LiveConnectionString.ConnectionString" Provider="System.Data.SqlClient">
          </Connection>
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="AccountCurrencyExchangeRateTableAdapter" Name="AccountCurrencyExchangeRate">
            <MainSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="[TimeLive2.7].dbo.AccountCurrencyExchangeRate" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="True" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="False" UserGetMethodName="GetData">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>DELETE FROM [AccountCurrencyExchangeRate] WHERE (([AccountCurrencyExchangeRateId] = @Original_AccountCurrencyExchangeRateId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AccountCurrencyExchangeRateId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountCurrencyExchangeRateId" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>INSERT INTO [AccountCurrencyExchangeRate] ([ExchangeRateEffectiveStartDate], [ExchangeRateEffectiveEndDate], [ExchangeRate], [AccountId], [AccountCurrencyId], [MasterAccountCurrencyExchangeRateId]) VALUES (@ExchangeRateEffectiveStartDate, @ExchangeRateEffectiveEndDate, @ExchangeRate, @AccountId, @AccountCurrencyId, @MasterAccountCurrencyExchangeRateId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@ExchangeRateEffectiveStartDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="ExchangeRateEffectiveStartDate" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@ExchangeRateEffectiveEndDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="ExchangeRateEffectiveEndDate" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@ExchangeRate" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="ExchangeRate" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@AccountId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountId" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@AccountCurrencyId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountCurrencyId" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="True" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@MasterAccountCurrencyExchangeRateId" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="MasterAccountCurrencyExchangeRateId" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>SELECT     AccountCurrencyExchangeRateId, ExchangeRateEffectiveStartDate, ExchangeRateEffectiveEndDate, ExchangeRate, AccountId, AccountCurrencyId, 
                      MasterAccountCurrencyExchangeRateId
FROM         AccountCurrencyExchangeRate</CommandText>
                    <Parameters>
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>UPDATE [AccountCurrencyExchangeRate] SET [ExchangeRateEffectiveStartDate] = @ExchangeRateEffectiveStartDate, [ExchangeRateEffectiveEndDate] = @ExchangeRateEffectiveEndDate, [ExchangeRate] = @ExchangeRate, [AccountId] = @AccountId, [AccountCurrencyId] = @AccountCurrencyId, [MasterAccountCurrencyExchangeRateId] = @MasterAccountCurrencyExchangeRateId WHERE (([AccountCurrencyExchangeRateId] = @Original_AccountCurrencyExchangeRateId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@ExchangeRateEffectiveStartDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="ExchangeRateEffectiveStartDate" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@ExchangeRateEffectiveEndDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="ExchangeRateEffectiveEndDate" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@ExchangeRate" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="ExchangeRate" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@AccountId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountId" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@AccountCurrencyId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountCurrencyId" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="True" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@MasterAccountCurrencyExchangeRateId" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="MasterAccountCurrencyExchangeRateId" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AccountCurrencyExchangeRateId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountCurrencyExchangeRateId" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="AccountCurrencyExchangeRateId" DataSetColumn="AccountCurrencyExchangeRateId" />
              <Mapping SourceColumn="ExchangeRateEffectiveStartDate" DataSetColumn="ExchangeRateEffectiveStartDate" />
              <Mapping SourceColumn="ExchangeRateEffectiveEndDate" DataSetColumn="ExchangeRateEffectiveEndDate" />
              <Mapping SourceColumn="ExchangeRate" DataSetColumn="ExchangeRate" />
              <Mapping SourceColumn="AccountId" DataSetColumn="AccountId" />
              <Mapping SourceColumn="AccountCurrencyId" DataSetColumn="AccountCurrencyId" />
              <Mapping SourceColumn="MasterAccountCurrencyExchangeRateId" DataSetColumn="MasterAccountCurrencyExchangeRateId" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="TimeLive.dbo.AccountCurrencyExchangeRate" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="True" GetMethodModifier="Public" GetMethodName="GetDataByAccountCurrencyIdAndDate" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="True">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="True">
                    <CommandText>SELECT     AccountCurrencyExchangeRateId, ExchangeRateEffectiveStartDate, ExchangeRateEffectiveEndDate, ExchangeRate, AccountId, AccountCurrencyId, 
                      MasterAccountCurrencyExchangeRateId
FROM         AccountCurrencyExchangeRate
WHERE     (AccountCurrencyId = @AccountCurrencyId) AND (ExchangeRateEffectiveStartDate &lt;= @EntryDate) AND (ExchangeRateEffectiveEndDate &gt;= @EntryDate)
order by ExchangeRateEffectiveStartDate desc</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="False" AutogeneratedName="AccountCurrencyId" ColumnName="AccountCurrencyId" DataSourceName="TimeLive.dbo.AccountCurrencyExchangeRate" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountCurrencyId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountCurrencyId" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="EntryDate" ColumnName="ExchangeRateEffectiveStartDate" DataSourceName="TimeLive.dbo.AccountCurrencyExchangeRate" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@EntryDate" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="ExchangeRateEffectiveStartDate" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="Timelive2.dbo.AccountCurrencyExchangeRate" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="True" GetMethodModifier="Public" GetMethodName="GetDataByAccountCurrencyExchangeRateId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="True" UserGetMethodName="GetDataByAccountCurrencyExchangeRateId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>SELECT AccountCurrencyExchangeRateId, AccountCurrencyId, AccountId, ExchangeRate, ExchangeRateEffectiveEndDate, ExchangeRateEffectiveStartDate, MasterAccountCurrencyExchangeRateId FROM AccountCurrencyExchangeRate WHERE (AccountCurrencyExchangeRateId = @AccountCurrencyExchangeRateId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="False" AutogeneratedName="AccountCurrencyExchangeRateId" ColumnName="AccountCurrencyExchangeRateId" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountCurrencyExchangeRateId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountCurrencyExchangeRateId" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="TimeLive.dbo.AccountCurrencyExchangeRate" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="True" GetMethodModifier="Public" GetMethodName="GetDataByAccountCurrencyId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="True">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>SELECT     AccountCurrencyExchangeRateId, ExchangeRateEffectiveStartDate, ExchangeRateEffectiveEndDate, ExchangeRate, AccountId, AccountCurrencyId, 
                      MasterAccountCurrencyExchangeRateId
FROM         AccountCurrencyExchangeRate
WHERE     (AccountCurrencyId = @AccountCurrencyId)
order by accountcurrencyid desc</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="False" AutogeneratedName="AccountCurrencyId" ColumnName="AccountCurrencyId" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountCurrencyId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountCurrencyId" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="TimeLive2913.dbo.AccountCurrencyExchangeRate" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="True" GetMethodModifier="Public" GetMethodName="GetDataByAccountCurrencyIdAndTimeEntryDate" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="True">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="True">
                    <CommandText>SELECT     AccountCurrencyExchangeRateId, ExchangeRateEffectiveStartDate, ExchangeRateEffectiveEndDate, ExchangeRate, AccountId, AccountCurrencyId, 
                      MasterAccountCurrencyExchangeRateId
FROM         AccountCurrencyExchangeRate
WHERE     (AccountId = @AccountId) AND (AccountCurrencyId = @AccountCurrencyId) AND (ExchangeRateEffectiveStartDate &lt;= @TimeEntryDate) AND (ExchangeRateEffectiveEndDate &gt;= @TimeEntryDate)
order by ExchangeRateEffectiveStartDate desc</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="False" AutogeneratedName="AccountId" ColumnName="AccountId" DataSourceName="TimeLive2913.dbo.AccountCurrencyExchangeRate" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountId" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="AccountCurrencyId" ColumnName="AccountCurrencyId" DataSourceName="TimeLive2913.dbo.AccountCurrencyExchangeRate" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountCurrencyId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountCurrencyId" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="TimeEntryDate" ColumnName="ExchangeRateEffectiveStartDate" DataSourceName="TimeLive2913.dbo.AccountCurrencyExchangeRate" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@TimeEntryDate" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="ExchangeRateEffectiveStartDate" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="Timelive2.dbo.AccountCurrencyExchangeRate" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="True" GetMethodModifier="Public" GetMethodName="GetDataByAccountId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="True">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>SELECT     AccountCurrencyExchangeRateId, ExchangeRateEffectiveStartDate, ExchangeRateEffectiveEndDate, ExchangeRate, AccountId, AccountCurrencyId, 
                      MasterAccountCurrencyExchangeRateId
FROM         AccountCurrencyExchangeRate
Where AccountId = @AccountId</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="False" AutogeneratedName="AccountId" ColumnName="AccountId" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountId" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="Timelive2.dbo.AccountCurrencyExchangeRate" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="True" GetMethodModifier="Public" GetMethodName="GetDataByAccountIdAndAccountCurrencyId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="True" UserGetMethodName="GetDataByAccountIdAndAccountCurrencyId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>SELECT AccountCurrencyExchangeRateId, AccountCurrencyId, AccountId, ExchangeRate, ExchangeRateEffectiveEndDate, ExchangeRateEffectiveStartDate, MasterAccountCurrencyExchangeRateId FROM AccountCurrencyExchangeRate WHERE (AccountId = @AccountId) AND (AccountCurrencyId = @AccountCurrencyId)
Order By ExchangeRateEffectiveEndDate desc</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="False" AutogeneratedName="AccountId" ColumnName="AccountId" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountId" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="AccountCurrencyId" ColumnName="AccountCurrencyId" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountCurrencyId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountCurrencyId" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="Timelive2.dbo.AccountCurrencyExchangeRate" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="True" GetMethodModifier="Public" GetMethodName="GetExchangeRateByAccountCurrencyIdAndExpenseEntryDate" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="True">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>SELECT     AccountCurrencyExchangeRateId, ExchangeRateEffectiveStartDate, ExchangeRateEffectiveEndDate, ExchangeRate, AccountId, AccountCurrencyId, 
                      MasterAccountCurrencyExchangeRateId
FROM         AccountCurrencyExchangeRate
WHERE     (AccountCurrencyId = @AccountCurrencyId) AND (ExchangeRateEffectiveStartDate &lt;= @ExpenseEntryDate) AND (ExchangeRateEffectiveEndDate &gt;= @ExpenseEntryDate)
order by ExchangeRateEffectiveStartDate desc</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="False" AutogeneratedName="AccountCurrencyId" ColumnName="AccountCurrencyId" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountCurrencyId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountCurrencyId" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="ExpenseEntryDate" ColumnName="ExchangeRateEffectiveStartDate" DataSourceName="" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@ExpenseEntryDate" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="ExchangeRateEffectiveStartDate" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="True" Modifier="Public" Name="InsertDefault" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="True">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="True">
                    <CommandText>INSERT INTO AccountCurrencyExchangeRate
                      (ExchangeRateEffectiveStartDate,  ExchangeRateEffectiveEndDate,                        ExchangeRate,AccountId, AccountCurrencyId ,MasterAccountCurrencyExchangeRateId)
SELECT     @StartDate,  @EndDate, dbo.MasterAccountCurrencyExchangeRate.ExchangeRate, @AccountId, dbo.AccountCurrency.AccountCurrencyId, dbo.MasterAccountCurrencyExchangeRate.MasterAccountCurrencyExchangeRateId
FROM         dbo.MasterAccountCurrencyExchangeRate INNER JOIN
                      dbo.AccountCurrency ON dbo.MasterAccountCurrencyExchangeRate.MasterAccountCurrencyId = dbo.AccountCurrency.MasterAccountCurrencyId
WHERE     (dbo.AccountCurrency.AccountId = @AccountId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@AccountId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@StartDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@EndDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="True" Modifier="Public" Name="UpdateExchangeRate" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="True">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>UPDATE    AccountCurrencyExchangeRate
SET              ExchangeRate = ExchangeRate/@ExchangeRate
WHERE    AccountId = @AccountId</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="False" AutogeneratedName="ExchangeRate" ColumnName="ExchangeRate" DataSourceName="" DataTypeServer="money" DbType="Currency" Direction="Input" ParameterName="@ExchangeRate" Precision="0" ProviderType="Money" Scale="0" Size="8" SourceColumn="ExchangeRate" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="AccountId" ColumnName="AccountId" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountId" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="vueAccountCurrencyExchangeRateTableAdapter" Name="vueAccountCurrencyExchangeRate">
            <MainSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="[TimeLive2.7].dbo.vueAccountCurrencyExchangeRate" DbObjectType="View" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="False" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="False" UserGetMethodName="GetData">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>SELECT     AccountCurrencyExchangeRateId, ExchangeRateEffectiveStartDate, ExchangeRateEffectiveEndDate, ExchangeRate, AccountId, 
                      AccountCurrencyId
FROM         vueAccountCurrencyExchangeRate</CommandText>
                    <Parameters>
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="AccountCurrencyExchangeRateId" DataSetColumn="AccountCurrencyExchangeRateId" />
              <Mapping SourceColumn="ExchangeRateEffectiveStartDate" DataSetColumn="ExchangeRateEffectiveStartDate" />
              <Mapping SourceColumn="ExchangeRateEffectiveEndDate" DataSetColumn="ExchangeRateEffectiveEndDate" />
              <Mapping SourceColumn="ExchangeRate" DataSetColumn="ExchangeRate" />
              <Mapping SourceColumn="AccountId" DataSetColumn="AccountId" />
              <Mapping SourceColumn="AccountCurrencyId" DataSetColumn="AccountCurrencyId" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="Timelive2.dbo.vueAccountCurrencyExchangeRate" DbObjectType="View" GenerateMethods="Get" GenerateShortCommands="True" GetMethodModifier="Public" GetMethodName="GetDataByAccountIdAndAccountCurrencyId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="True" UserGetMethodName="GetDataByAccountIdAndAccountCurrencyId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>SELECT AccountCurrencyExchangeRateId, AccountCurrencyId, AccountId, ExchangeRate, ExchangeRateEffectiveEndDate, ExchangeRateEffectiveStartDate FROM vueAccountCurrencyExchangeRate WHERE (AccountId = @AccountId) AND (AccountCurrencyId = @AccountCurrencyId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="False" AutogeneratedName="AccountId" ColumnName="AccountId" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountId" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="True" AutogeneratedName="AccountCurrencyId" ColumnName="AccountCurrencyId" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountCurrencyId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountCurrencyId" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="vueAccountBaseCurrencyTableAdapter" Name="vueAccountBaseCurrency">
            <MainSource>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="[TimeLive2.7].dbo.vueAccountBaseCurrency" DbObjectType="View" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="False" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="False">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>SELECT     AccountBaseCurrencyId, BaseCurrency, AccountId, CurrencyCode
FROM         vueAccountBaseCurrency</CommandText>
                    <Parameters>
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="AccountBaseCurrencyId" DataSetColumn="AccountBaseCurrencyId" />
              <Mapping SourceColumn="BaseCurrency" DataSetColumn="BaseCurrency" />
              <Mapping SourceColumn="AccountId" DataSetColumn="AccountId" />
              <Mapping SourceColumn="CurrencyCode" DataSetColumn="CurrencyCode" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="LiveConnectionString (Web.config)" DbObjectName="Timelive2.dbo.vueAccountBaseCurrency" DbObjectType="View" GenerateMethods="Get" GenerateShortCommands="True" GetMethodModifier="Public" GetMethodName="GetDataByAccountId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="True">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>SELECT AccountBaseCurrencyId, AccountId, BaseCurrency, CurrencyCode FROM vueAccountBaseCurrency WHERE (AccountId = @AccountId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="False" AutogeneratedName="AccountId" ColumnName="AccountId" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountId" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources>
        </Sources>
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="AccountCurrencyExchangeRate" msdata:IsDataSet="true" msdata:UseCurrentLocale="true">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="AccountCurrencyExchangeRate">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="AccountCurrencyExchangeRateId" msdata:ReadOnly="true" msdata:AutoIncrement="true" type="xs:int" />
              <xs:element name="ExchangeRateEffectiveStartDate" type="xs:dateTime" />
              <xs:element name="ExchangeRateEffectiveEndDate" type="xs:dateTime" />
              <xs:element name="ExchangeRate" type="xs:decimal" />
              <xs:element name="AccountId" type="xs:int" />
              <xs:element name="AccountCurrencyId" type="xs:int" />
              <xs:element name="MasterAccountCurrencyExchangeRateId" type="xs:short" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="vueAccountCurrencyExchangeRate">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="AccountCurrencyExchangeRateId" type="xs:int" />
              <xs:element name="ExchangeRateEffectiveStartDate" type="xs:dateTime" />
              <xs:element name="ExchangeRateEffectiveEndDate" type="xs:dateTime" />
              <xs:element name="ExchangeRate" type="xs:decimal" />
              <xs:element name="AccountId" type="xs:int" />
              <xs:element name="AccountCurrencyId" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="vueAccountBaseCurrency">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="AccountBaseCurrencyId" type="xs:int" minOccurs="0" />
              <xs:element name="BaseCurrency" msdata:ReadOnly="true" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="AccountId" type="xs:int" />
              <xs:element name="CurrencyCode" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:AccountCurrencyExchangeRate" />
      <xs:field xpath="mstns:AccountCurrencyExchangeRateId" />
    </xs:unique>
  </xs:element>
</xs:schema>